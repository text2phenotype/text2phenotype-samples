
{
    "resourceType":"DocumentReference",
    "id":"55994",
    "meta":{
        "versionId":"1",
        "lastUpdated":"2018-02-23T23:08:34.000+00:00"
    },
    "subject":{
        "reference":"Patient/55974"
    },
    "type":{
        "coding":[
            {
                "system":"http://loinc.org",
                "code":"11329-0",
                "display":"History"
            },
            {
                "system":"http://loinc.org",
                "code":"18782-3",
                "display":"Findings"
            }
        ]
    },
    "indexed":"2018-02-23T18:08:33",
    "status":"current",
    "content":[
        {
            "attachment":{
                "contentType":"application/xml",
                "data":""
            }
        }
    ]
}