
{
    "resourceType":"DocumentReference",
    "id":"32049",
    "meta":{
        "versionId":"27",
        "lastUpdated":"2017-02-19T20:20:04.000+00:00"
    },
    "text":{
        "status":"generated",
        "div":"<div>CCD - Mission Community Hospital Emergency Department, exported on 2017-02-19</div>"
    },
    "masterIdentifier":{
        "system":"urn:oid:2.16.840.1.113883.19",
        "value":"999021"
    },
    "identifier":[
        {
            "use":"secondary",
            "system":"https://sandbox.interopengine.com:8181/fhir-server-stu3/himss17",
            "value":"999021"
        }
    ],
    "subject":{
        "reference":"Patient/31668"
    },
    "type":{
        "coding":[
            {
                "system":"http://loinc.org",
                "code":"18842-5",
                "display":"Discharge summarization note"
            }
        ]
    },
    "created":"2017-01-01T17:15:04+05:00",
    "indexed":"2017-02-19T12:20:03.524-08:00",
    "status":"current",
    "content":[
        {
            "attachment":{
                "contentType":"application/xml",
                "data":"PD94bWwgdmVyc2lvbj0iMS4wIj8+DQo8P3htbC1zdHlsZXNoZWV0IHR5cGU9InRleHQveHNsIiBocmVmPSJDREEueHNsIj8+DQo8IS0tDQoNCglUaXRsZTogVVNfUmVhbG1fSGVhZGVyX1RlbXBsYXRlDQoJT3JpZ2luYWwgRmlsZW5hbWU6IFVTX1JlYWxtX0hlYWRlcl9UZW1wbGF0ZS54bWwNCglWZXJzaW9uOiAxLjANCglSZXZpc2lvbiBIaXN0b3J5Og0KCTAxLzMxLzIwMTEgYmFtIGNyZWF0ZWQNCiAgICAwNy8yOS8yMDExIFJXTSBtb2RpZmllZA0KDQotLT4NCjxDbGluaWNhbERvY3VtZW50IHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiDQogeHNpOnNjaGVtYUxvY2F0aW9uPSJ1cm46aGw3LW9yZzp2MyBodHRwOi8veHJlZzIubmlzdC5nb3Y6ODA4MC9oaXRzcFZhbGlkYXRpb24vc2NoZW1hL2NkYXIyYzMyL2luZnJhc3RydWN0dXJlL2NkYS9DMzJfQ0RBLnhzZCINCiB4bWxucz0idXJuOmhsNy1vcmc6djMiDQogeG1sbnM6bWlmPSJ1cm46aGw3LW9yZzp2My9taWYiPg0KCTwhLS0NCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KQEBAQ0RBIEhlYWRlcg0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoJLS0+DQoJPHJlYWxtQ29kZSBjb2RlPSJVUyIvPg0KCTx0eXBlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMS4zIiBleHRlbnNpb249IlBPQ0RfSEQwMDAwNDAiLz4NCgk8IS0tIFVTIEdlbmVyYWwgSGVhZGVyIFRlbXBsYXRlIC0tPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjEuMSIvPg0KCTwhLS0gKioqIE5vdGU6ICBUaGUgbmV4dCB0ZW1wbGF0ZUlkLCBjb2RlIGFuZCB0aXRsZSB3aWxsIGRpZmZlciBkZXBlbmRpbmcgb24gd2hhdCB0eXBlIG9mIGRvY3VtZW50IGlzIGJlaW5nIHNlbnQuICoqKiAtLT4NCgk8IS0tIGNvbmZvcm1zIHRvIHRoZSBkb2N1bWVudCBzcGVjaWZpYyByZXF1aXJlbWVudHMgIC0tPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjEuOCIvPg0KCTxpZCBleHRlbnNpb249Ijk5OTAyMSIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTkiLz4NCgk8Y29kZSBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgY29kZT0iMTg4NDItNSIgZGlzcGxheU5hbWU9IkRpc2NoYXJnZSBzdW1tYXJpemF0aW9uIG5vdGUiLz4NCgk8dGl0bGU+TWlzc2lvbiBDb21tdW5pdHkgSG9zcGl0YWwgRW1lcmdlbmN5IERlcGFydG1lbnQgT3Zlcm5pZ2h0IEhvc3BpdGFsIE9ic2VydmF0aW9uPC90aXRsZT4NCgk8ZWZmZWN0aXZlVGltZSB2YWx1ZT0iMjAxNzAxMDExNzE1MDQrMDUwMCIvPg0KCTxjb25maWRlbnRpYWxpdHlDb2RlIGNvZGU9Ik4iIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuMjUiLz4NCgk8bGFuZ3VhZ2VDb2RlIGNvZGU9ImVuLVVTIi8+DQoJPHNldElkIGV4dGVuc2lvbj0iMTExMTk5MDIxIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xOSIvPg0KCTx2ZXJzaW9uTnVtYmVyIHZhbHVlPSIxIi8+DQoJPHJlY29yZFRhcmdldD4NCgkJPHBhdGllbnRSb2xlPg0KCQkJPGlkIGV4dGVuc2lvbj0iMTIzNDU2NyIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuNC4xIi8+DQoJCQk8IS0tIEZha2UgU29jaWFsIFNlY3VyaXR5IE51bWJlciB1c2luZyB0aGUgYWN0dWFsIFNTTiBPSUQuIC0tPg0KCQkJPGFkZHIgdXNlPSJIUCI+DQoJCQkJPCEtLSBIUCBpcyAicHJpbWFyeSBob21lIiBmcm9tIGNvZGVTeXN0ZW0gMi4xNi44NDAuMS4xMTM4ODMuNS4xMTE5IC0tPg0KCQkJCTxzdHJlZXRBZGRyZXNzTGluZT41IExvbmd3b29kIEF2ZTwvc3RyZWV0QWRkcmVzc0xpbmU+DQoJCQkJPGNpdHk+Qm9zdG9uPC9jaXR5Pg0KCQkJCTxzdGF0ZT5NQTwvc3RhdGU+DQoJCQkJPHBvc3RhbENvZGU+MDIxMzA8L3Bvc3RhbENvZGU+DQoJCQkJPGNvdW50cnk+VVM8L2NvdW50cnk+DQoJCQkJPCEtLSBVUyBpcyAiVW5pdGVkIFN0YXRlcyIgZnJvbSBJU08gMzE2Ni0xIENvdW50cnkgQ29kZXM6IDEuMC4zMTY2LjEgLS0+DQoJCQk8L2FkZHI+DQoJCQk8dGVsZWNvbSB2YWx1ZT0idGVsOig3ODEpNTU1LTEyMTIiIHVzZT0iSFAiLz4NCgkJCTwhLS0gSFAgaXMgInByaW1hcnkgaG9tZSIgZnJvbSBITDcgQWRkcmVzc1VzZSAyLjE2Ljg0MC4xLjExMzg4My41LjExMTkgLS0+DQoJCQk8cGF0aWVudD4NCgkJCQk8bmFtZSB1c2U9IkwiPg0KCQkJCQk8IS0tIEwgaXMgIkxlZ2FsIiBmcm9tIEhMNyBFbnRpdHlOYW1lVXNlIDIuMTYuODQwLjEuMTEzODgzLjUuNDUgLS0+DQoJCQkJCTxwcmVmaXg+TXIuPC9wcmVmaXg+DQoJCQkJCTxnaXZlbj5TdGVwaGFuPC9naXZlbj4NCgkJCQkJPGZhbWlseT5HYXJjaWE8L2ZhbWlseT4NCgkJCQk8L25hbWU+DQoJCQkJPGFkbWluaXN0cmF0aXZlR2VuZGVyQ29kZSBjb2RlPSJNIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjEiIGRpc3BsYXlOYW1lPSJNYWxlIi8+DQoJCQkJPGJpcnRoVGltZSB2YWx1ZT0iMTk1NzAzMDQiLz4g4oCLDQoJCQkJPG1hcml0YWxTdGF0dXNDb2RlIGNvZGU9Ik0iIGRpc3BsYXlOYW1lPSJNYXJyaWVkIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjIiIGNvZGVTeXN0ZW1OYW1lPSJNYXJpdGFsU3RhdHVzQ29kZSIvPg0KCQkJCTxyZWxpZ2lvdXNBZmZpbGlhdGlvbkNvZGUgY29kZT0iMTAxMyIgZGlzcGxheU5hbWU9IkNocmlzdGlhbiAobm9uLUNhdGhvbGljLCBub24tc3BlY2lmaWMpIiBjb2RlU3lzdGVtTmFtZT0iSEw3IFJlbGlnaW91cyBBZmZpbGlhdGlvbiAiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjEuMTEuMTkxODUiLz4NCgkJCQk8cmFjZUNvZGUgY29kZT0iMjEzMS0xIiBkaXNwbGF5TmFtZT0iT3RoZXIgUmFjZSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4yMzgiIGNvZGVTeXN0ZW1OYW1lPSJSYWNlICZhbXA7IEV0aG5pY2l0eSAtIENEQyIvPg0KCQkJCTxldGhuaWNHcm91cENvZGUgY29kZT0iMjEzNS0yIiBkaXNwbGF5TmFtZT0iSGlzcGFuaWMgb3IgTGF0aW5vIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjIzOCIgY29kZVN5c3RlbU5hbWU9IlJhY2UgJmFtcDsgRXRobmljaXR5IC0gQ0RDIi8+DQoJCQkJPGd1YXJkaWFuPg0KCQkJCQk8Y29kZSBjb2RlPSJHUkZUSCIgZGlzcGxheU5hbWU9IkdyYW5kZmF0aGVyIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjExMSIgY29kZVN5c3RlbU5hbWU9IkhMNyBSb2xlIGNvZGUiLz4NCgkJCQkJPGFkZHIgdXNlPSJIUCI+DQoJCQkJCQk8IS0tIEhQIGlzICJwcmltYXJ5IGhvbWUiIGZyb20gY29kZVN5c3RlbSAyLjE2Ljg0MC4xLjExMzg4My41LjExMTkgLS0+DQoJCQkJCQk8c3RyZWV0QWRkcmVzc0xpbmU+MTcgRGF3cyBSZC48L3N0cmVldEFkZHJlc3NMaW5lPg0KCQkJCQkJPGNpdHk+Qmx1ZSBCZWxsPC9jaXR5Pg0KCQkJCQkJPHN0YXRlPk1BPC9zdGF0ZT4NCgkJCQkJCTxwb3N0YWxDb2RlPjAyMzY4PC9wb3N0YWxDb2RlPg0KCQkJCQkJPGNvdW50cnk+VVM8L2NvdW50cnk+DQoJCQkJCQk8IS0tIFVTIGlzICJVbml0ZWQgU3RhdGVzIiBmcm9tIElTTyAzMTY2LTEgQ291bnRyeSBDb2RlczogMS4wLjMxNjYuMSAtLT4NCgkJCQkJPC9hZGRyPg0KCQkJCQk8dGVsZWNvbSB2YWx1ZT0idGVsOig3ODEpNTU1LTEyMTIiIHVzZT0iSFAiLz4NCgkJCQkJPGd1YXJkaWFuUGVyc29uPg0KCQkJCQkJPG5hbWU+DQoJCQkJCQkJPGdpdmVuPk1hdGVvPC9naXZlbj4NCgkJCQkJCQk8ZmFtaWx5PlJlbGF0aXZlPC9mYW1pbHk+DQoJCQkJCQk8L25hbWU+DQoJCQkJCTwvZ3VhcmRpYW5QZXJzb24+DQoJCQkJPC9ndWFyZGlhbj4NCgkJCQk8YmlydGhwbGFjZT4NCgkJCQkJPHBsYWNlPg0KCQkJCQkJPGFkZHI+DQoJCQkJCQkJPHN0YXRlPkZMPC9zdGF0ZT4NCgkJCQkJCQk8cG9zdGFsQ29kZT4zMjgwNTwvcG9zdGFsQ29kZT4NCgkJCQkJCQk8Y291bnRyeT5VU0E8L2NvdW50cnk+DQoJCQkJCQk8L2FkZHI+DQoJCQkJCTwvcGxhY2U+DQoJCQkJPC9iaXJ0aHBsYWNlPg0KCQkJCTxsYW5ndWFnZUNvbW11bmljYXRpb24+DQoJCQkJCTxsYW5ndWFnZUNvZGUgY29kZT0iZnItQ04iLz4NCgkJCQkJPG1vZGVDb2RlIGNvZGU9IlJXUiIgZGlzcGxheU5hbWU9IlJlY2lldmUgV3JpdHRlbiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNS42MCIgY29kZVN5c3RlbU5hbWU9Ikxhbmd1YWdlQWJpbGl0eU1vZGUiLz4NCgkJCQkJPHByZWZlcmVuY2VJbmQgdmFsdWU9InRydWUiLz4NCgkJCQk8L2xhbmd1YWdlQ29tbXVuaWNhdGlvbj4NCgkJCTwvcGF0aWVudD4NCgkJCTxwcm92aWRlck9yZ2FuaXphdGlvbj4NCgkJCQk8aWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTkiLz4NCgkJCQk8bmFtZT5NaXNzaW9uIENvbW11bml0eSBIb3NwaXRhbCBFbWVyZ2VuY3kgRGVwYXJ0bWVudDwvbmFtZT4NCgkJCQk8dGVsZWNvbSB1c2U9IldQIiB2YWx1ZT0idGVsOig3ODEpNTU1LTEyMTIiLz4NCgkJCQk8YWRkcj4NCgkJCQkJPHN0cmVldEFkZHJlc3NMaW5lPjIxIE5vcnRoIEF2ZTwvc3RyZWV0QWRkcmVzc0xpbmU+DQoJCQkJCTxjaXR5PkJ1cmxpbmd0b248L2NpdHk+DQoJCQkJCTxzdGF0ZT5NQTwvc3RhdGU+DQoJCQkJCTxwb3N0YWxDb2RlPjAyMzY4PC9wb3N0YWxDb2RlPg0KCQkJCQk8Y291bnRyeT5VU0E8L2NvdW50cnk+DQoJCQkJPC9hZGRyPg0KCQkJPC9wcm92aWRlck9yZ2FuaXphdGlvbj4NCgkJPC9wYXRpZW50Um9sZT4NCgk8L3JlY29yZFRhcmdldD4NCgk8YXV0aG9yPg0KCQk8dGltZSB2YWx1ZT0iMjAxNzAxMDEyMjQ0MTErMDUwMCIvPg0KCQk8YXNzaWduZWRBdXRob3I+DQoJCQk8aWQgZXh0ZW5zaW9uPSJLUDAwMDE3IiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xOS41Ii8+DQoJCQk8YWRkcj4NCgkJCQk8c3RyZWV0QWRkcmVzc0xpbmU+MjEgTm9ydGggQXZlLjwvc3RyZWV0QWRkcmVzc0xpbmU+DQoJCQkJPGNpdHk+QnVybGluZ3RvbjwvY2l0eT4NCgkJCQk8c3RhdGU+TUE8L3N0YXRlPg0KCQkJCTxwb3N0YWxDb2RlPjAyMzY4PC9wb3N0YWxDb2RlPg0KCQkJCTxjb3VudHJ5PlVTQTwvY291bnRyeT4NCgkJCTwvYWRkcj4NCgkJCTx0ZWxlY29tIHVzZT0iV1AiIHZhbHVlPSJ0ZWw6KDU1NSk1NTUtMTAwMyIvPg0KCQkJPGFzc2lnbmVkUGVyc29uPg0KCQkJCTxuYW1lPg0KCQkJCQk8Z2l2ZW4+SGVucnk8L2dpdmVuPg0KCQkJCQk8ZmFtaWx5PlNldmVuPC9mYW1pbHk+DQoJCQkJPC9uYW1lPg0KCQkJPC9hc3NpZ25lZFBlcnNvbj4NCgkJPC9hc3NpZ25lZEF1dGhvcj4NCgk8L2F1dGhvcj4NCgk8ZGF0YUVudGVyZXI+DQoJCTxhc3NpZ25lZEVudGl0eT4NCgkJCTxpZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xOS41IiBleHRlbnNpb249IjQzMjUyIi8+DQoJCQk8YWRkcj4NCgkJCQk8c3RyZWV0QWRkcmVzc0xpbmU+MjEgTm9ydGggQXZlLjwvc3RyZWV0QWRkcmVzc0xpbmU+DQoJCQkJPGNpdHk+QnVybGluZ3RvbjwvY2l0eT4NCgkJCQk8c3RhdGU+TUE8L3N0YXRlPg0KCQkJCTxwb3N0YWxDb2RlPjAyMzY4PC9wb3N0YWxDb2RlPg0KCQkJCTxjb3VudHJ5PlVTQTwvY291bnRyeT4NCgkJCTwvYWRkcj4NCgkJCTx0ZWxlY29tIHVzZT0iV1AiIHZhbHVlPSJ0ZWw6KDU1NSk1NTUtMTAwMyIvPg0KCQkJPGFzc2lnbmVkUGVyc29uPg0KCQkJCTxuYW1lPg0KCQkJCQk8Z2l2ZW4+SGVucnk8L2dpdmVuPg0KCQkJCQk8ZmFtaWx5PlNldmVuPC9mYW1pbHk+DQoJCQkJPC9uYW1lPg0KCQkJPC9hc3NpZ25lZFBlcnNvbj4NCgkJPC9hc3NpZ25lZEVudGl0eT4NCgk8L2RhdGFFbnRlcmVyPg0KCTxpbmZvcm1hbnQ+DQoJCTxhc3NpZ25lZEVudGl0eT4NCgkJCTxpZCBleHRlbnNpb249IktQMDAwMTciIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjE5LjUiLz4NCgkJCTxhZGRyPg0KCQkJCTxzdHJlZXRBZGRyZXNzTGluZT4yMSBOb3J0aCBBdmUuPC9zdHJlZXRBZGRyZXNzTGluZT4NCgkJCQk8Y2l0eT5CdXJsaW5ndG9uPC9jaXR5Pg0KCQkJCTxzdGF0ZT5NQTwvc3RhdGU+DQoJCQkJPHBvc3RhbENvZGU+MDIzNjg8L3Bvc3RhbENvZGU+DQoJCQkJPGNvdW50cnk+VVNBPC9jb3VudHJ5Pg0KCQkJPC9hZGRyPg0KCQkJPHRlbGVjb20gdmFsdWU9InRlbDooNTU1KTU1NS0xMDAzIi8+DQoJCQk8YXNzaWduZWRQZXJzb24+DQoJCQkJPG5hbWU+DQoJCQkJCTxnaXZlbj5IZW5yeTwvZ2l2ZW4+DQoJCQkJCTxmYW1pbHk+U2V2ZW48L2ZhbWlseT4NCgkJCQk8L25hbWU+DQoJCQk8L2Fzc2lnbmVkUGVyc29uPg0KCQk8L2Fzc2lnbmVkRW50aXR5Pg0KCTwvaW5mb3JtYW50Pg0KCTxpbmZvcm1hbnQ+DQoJCTxyZWxhdGVkRW50aXR5IGNsYXNzQ29kZT0iUFJTIj4NCgkJCTwhLS0gY2xhc3NDb2RlIFBSUyByZXByZXNlbnRzIGEgcGVyc29uIHdpdGggcGVyc29uYWwgcmVsYXRpb25zaGlwIHdpdGggdGhlIHBhdGllbnQuIC0tPg0KCQkJPGNvZGUgY29kZT0iU1BTIiBkaXNwbGF5TmFtZT0iU1BPVVNFIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My4xLjExLjE5NTYzIiBjb2RlU3lzdGVtTmFtZT0iUGVyc29uYWwgUmVsYXRpb25zaGlwIFJvbGUgVHlwZSBWYWx1ZSBTZXQiLz4NCgkJCTxyZWxhdGVkUGVyc29uPg0KCQkJCTxuYW1lPg0KCQkJCQk8Z2l2ZW4+Um9zZTwvZ2l2ZW4+DQoJCQkJCTxmYW1pbHk+R2FyY2lhPC9mYW1pbHk+DQoJCQkJPC9uYW1lPg0KCQkJPC9yZWxhdGVkUGVyc29uPg0KCQk8L3JlbGF0ZWRFbnRpdHk+DQoJPC9pbmZvcm1hbnQ+DQoJPGN1c3RvZGlhbj4NCgkJPGFzc2lnbmVkQ3VzdG9kaWFuPg0KCQkJPHJlcHJlc2VudGVkQ3VzdG9kaWFuT3JnYW5pemF0aW9uPg0KCQkJCTxpZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xOS41Ii8+DQoJCQkJPG5hbWU+R29vZCBIZWFsdGggQ2xpbmljPC9uYW1lPg0KCQkJCTx0ZWxlY29tIHZhbHVlPSJ0ZWw6KDU1NSk1NTUtMTIxMiIgdXNlPSJXUCIvPg0KCQkJCTxhZGRyIHVzZT0iV1AiPg0KCQkJCQk8c3RyZWV0QWRkcmVzc0xpbmU+MTcgRGF3cyBSZC48L3N0cmVldEFkZHJlc3NMaW5lPg0KCQkJCQk8Y2l0eT5CbHVlIEJlbGw8L2NpdHk+DQoJCQkJCTxzdGF0ZT5NQTwvc3RhdGU+DQoJCQkJCTxwb3N0YWxDb2RlPjAyMzY4PC9wb3N0YWxDb2RlPg0KCQkJCQk8Y291bnRyeT5VU0E8L2NvdW50cnk+DQoJCQkJPC9hZGRyPg0KCQkJPC9yZXByZXNlbnRlZEN1c3RvZGlhbk9yZ2FuaXphdGlvbj4NCgkJPC9hc3NpZ25lZEN1c3RvZGlhbj4NCgk8L2N1c3RvZGlhbj4NCgk8aW5mb3JtYXRpb25SZWNpcGllbnQ+DQoJCTxpbnRlbmRlZFJlY2lwaWVudD4NCgkJCTxpbmZvcm1hdGlvblJlY2lwaWVudD4NCgkJCQk8bmFtZT4NCgkJCQkJPGdpdmVuPkhlbnJ5PC9naXZlbj4NCgkJCQkJPGZhbWlseT5TZXZlbjwvZmFtaWx5Pg0KCQkJCTwvbmFtZT4NCgkJCTwvaW5mb3JtYXRpb25SZWNpcGllbnQ+DQoJCQk8cmVjZWl2ZWRPcmdhbml6YXRpb24+DQoJCQkJPG5hbWU+R29vZCBIZWFsdGggQ2xpbmljPC9uYW1lPg0KCQkJPC9yZWNlaXZlZE9yZ2FuaXphdGlvbj4NCgkJPC9pbnRlbmRlZFJlY2lwaWVudD4NCgk8L2luZm9ybWF0aW9uUmVjaXBpZW50Pg0KCTxsZWdhbEF1dGhlbnRpY2F0b3I+DQoJCTx0aW1lIHZhbHVlPSIyMDE3MDEwMTIyNDQxMSswNTAwIi8+DQoJCTxzaWduYXR1cmVDb2RlIGNvZGU9IlMiLz4NCgkJPGFzc2lnbmVkRW50aXR5Pg0KCQkJPGlkIGV4dGVuc2lvbj0iS1AwMDAxNyIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTkiLz4NCgkJCTxhZGRyPg0KCQkJCTxzdHJlZXRBZGRyZXNzTGluZT4yMSBOb3J0aCBBdmUuPC9zdHJlZXRBZGRyZXNzTGluZT4NCgkJCQk8Y2l0eT5CdXJsaW5ndG9uPC9jaXR5Pg0KCQkJCTxzdGF0ZT5NQTwvc3RhdGU+DQoJCQkJPHBvc3RhbENvZGU+MDIzNjg8L3Bvc3RhbENvZGU+DQoJCQkJPGNvdW50cnk+VVNBPC9jb3VudHJ5Pg0KCQkJPC9hZGRyPg0KCQkJPHRlbGVjb20gdXNlPSJXUCIgdmFsdWU9InRlbDooNTU1KTU1NS0xMDAzIi8+DQoJCQk8YXNzaWduZWRQZXJzb24+DQoJCQkJPG5hbWU+DQoJCQkJCTxnaXZlbj5IZW5yeTwvZ2l2ZW4+DQoJCQkJCTxmYW1pbHk+U2V2ZW48L2ZhbWlseT4NCgkJCQk8L25hbWU+DQoJCQk8L2Fzc2lnbmVkUGVyc29uPg0KCQk8L2Fzc2lnbmVkRW50aXR5Pg0KCTwvbGVnYWxBdXRoZW50aWNhdG9yPg0KCTxhdXRoZW50aWNhdG9yPg0KCQk8dGltZSB2YWx1ZT0iMjAxNzAxMDEyMjQ0MTErMDUwMCIvPg0KCQk8c2lnbmF0dXJlQ29kZSBjb2RlPSJTIi8+DQoJCTxhc3NpZ25lZEVudGl0eT4NCgkJCTxpZCBleHRlbnNpb249IktQMDAwMTciIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjE5Ii8+DQoJCQk8YWRkcj4NCgkJCQk8c3RyZWV0QWRkcmVzc0xpbmU+MjEgTm9ydGggQXZlLjwvc3RyZWV0QWRkcmVzc0xpbmU+DQoJCQkJPGNpdHk+QnVybGluZ3RvbjwvY2l0eT4NCgkJCQk8c3RhdGU+TUE8L3N0YXRlPg0KCQkJCTxwb3N0YWxDb2RlPjAyMzY4PC9wb3N0YWxDb2RlPg0KCQkJCTxjb3VudHJ5PlVTQTwvY291bnRyeT4NCgkJCTwvYWRkcj4NCgkJCTx0ZWxlY29tIHVzZT0iV1AiIHZhbHVlPSJ0ZWw6KDU1NSk1NTUtMTAwMyIvPg0KCQkJPGFzc2lnbmVkUGVyc29uPg0KCQkJCTxuYW1lPg0KCQkJCQk8Z2l2ZW4+SGVucnk8L2dpdmVuPg0KCQkJCQk8ZmFtaWx5PlNldmVuPC9mYW1pbHk+DQoJCQkJPC9uYW1lPg0KCQkJPC9hc3NpZ25lZFBlcnNvbj4NCgkJPC9hc3NpZ25lZEVudGl0eT4NCgk8L2F1dGhlbnRpY2F0b3I+DQoJPHBhcnRpY2lwYW50IHR5cGVDb2RlPSJJTkQiPg0KCQk8YXNzb2NpYXRlZEVudGl0eSBjbGFzc0NvZGU9Ik5PSyI+DQoJCQk8Y29kZSBjb2RlPSJNVEgiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuMTExIi8+DQoJCQk8YWRkcj4NCgkJCQk8c3RyZWV0QWRkcmVzc0xpbmU+MTcgRGF3cyBSZC48L3N0cmVldEFkZHJlc3NMaW5lPg0KCQkJCTxjaXR5PkJsdWUgQmVsbDwvY2l0eT4NCgkJCQk8c3RhdGU+TUE8L3N0YXRlPg0KCQkJCTxwb3N0YWxDb2RlPjAyMzY4PC9wb3N0YWxDb2RlPg0KCQkJCTxjb3VudHJ5PlVTQTwvY291bnRyeT4NCgkJCTwvYWRkcj4NCgkJCTx0ZWxlY29tIHZhbHVlPSJ0ZWw6KDk5OSk1NTUtMTIxMiIgdXNlPSJXUCIvPg0KCQkJPGFzc29jaWF0ZWRQZXJzb24+DQoJCQkJPG5hbWU+DQoJCQkJCTxwcmVmaXg+TXJzLjwvcHJlZml4Pg0KCQkJCQk8Z2l2ZW4+SmFuZXQ8L2dpdmVuPg0KCQkJCQk8ZmFtaWx5PkdhcmNpYTwvZmFtaWx5Pg0KCQkJCTwvbmFtZT4NCgkJCTwvYXNzb2NpYXRlZFBlcnNvbj4NCgkJPC9hc3NvY2lhdGVkRW50aXR5Pg0KCTwvcGFydGljaXBhbnQ+DQoJPGNvbXBvbmVudE9mPg0KCQk8ZW5jb21wYXNzaW5nRW5jb3VudGVyPg0KCQkJPGlkIGV4dGVuc2lvbj0iOTkzNzAxMiIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTkiLz4NCgkJCTxjb2RlIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMTIiIGNvZGVTeXN0ZW1OYW1lPSJDUFQtNCIgY29kZT0iOTkyMTMiIGRpc3BsYXlOYW1lPSJFdmFsdWF0aW9uIGFuZCBNYW5hZ2VtZW50Ii8+DQoJCQk8ZWZmZWN0aXZlVGltZT4NCgkJCQk8bG93IHZhbHVlPSIyMDE3MDEwMSIvPg0KCQkJCTxoaWdoIHZhbHVlPSIyMDE3MDEwMSIvPg0KCQkJPC9lZmZlY3RpdmVUaW1lPg0KCQkJDQoJCQk8IS0tIEBEaXNjaGFyZ2VEaXNwb3NpdGlvbiAtLT4gDQoJCQk8ZGlzY2hhcmdlRGlzcG9zaXRpb25Db2RlIGNvZGU9IjAyIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My4xMi4xMTIiIGRpc3BsYXlOYW1lPSJEaXNjaGFyZ2VkL3RyYW5zZmVycmVkIHRvIGEgc2hvcnQtdGVybSBnZW5lcmFsIGhvc3BpdGFsIGZvciBpbnBhdGllbnQgY2FyZSIgY29kZVN5c3RlbU5hbWU9IkhMNyBEaXNjaGFyZ2UgRGlzcG9zaXRpb24iLz4NCgkJCQ0KCQkJPGxvY2F0aW9uPg0KCQkJCTxoZWFsdGhDYXJlRmFjaWxpdHk+DQoJCQkJCTxpZCByb290PSIyLjE2LjU0MC4xLjExMzg4My4xOS4yIi8+DQoJCQkJPC9oZWFsdGhDYXJlRmFjaWxpdHk+DQoJCQk8L2xvY2F0aW9uPg0KCQk8L2VuY29tcGFzc2luZ0VuY291bnRlcj4NCgk8L2NvbXBvbmVudE9mPg0KCQ0KPCEtLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQogICAgIEBAQENEQSBCb2R5DQoNCiAgICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogLS0+DQoJPGNvbXBvbmVudD4NCgkgIDxzdHJ1Y3R1cmVkQm9keT4NCg0KCSAgICANCjwhLS0NCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCkBAQUxMRVJHSUVTLCBBRFZFUlNFIFJFQUNUSU9OUywgQUxFUlRTIA0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+DQo8Y29tcG9uZW50Pg0KICA8c2VjdGlvbj4NCiAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi4yLjYuMSIvPg0KICAgIDwhLS0gQWxlcnRzIHNlY3Rpb24gdGVtcGxhdGUgLS0+DQogICAgPGNvZGUgY29kZT0iNDg3NjUtMiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIi8+DQogICAgPHRpdGxlPkFsbGVyZ2llcywgQWR2ZXJzZSBSZWFjdGlvbnMsIEFsZXJ0czwvdGl0bGU+DQogICAgPHRleHQ+DQogICAgICA8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0iMTAwJSI+DQoJPHRoZWFkPg0KCSAgPHRyPg0KCSAgICA8dGg+U3Vic3RhbmNlPC90aD4NCgkgICAgPHRoPlJlYWN0aW9uPC90aD4NCgkgICAgPHRoPlN0YXR1czwvdGg+DQoJICA8L3RyPg0KCTwvdGhlYWQ+DQoJPHRib2R5Pg0KCSAgPHRyPg0KCSAgICA8dGQ+RXJ5dGhyb215Y2luPC90ZD4NCgkgICAgPHRkPg0KCSAgICAgIDxjb250ZW50IElEPSJyZWFjdGlvbjEiPkhpdmVzPC9jb250ZW50Pg0KCSAgICA8L3RkPg0KCSAgICA8dGQ+QWN0aXZlPC90ZD4NCgkgIDwvdHI+DQoNCgk8L3Rib2R5Pg0KICAgICAgPC90YWJsZT4NCiAgICA8L3RleHQ+DQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMzAiLz4NCgk8aWQgcm9vdD0iMzZlM2U5MzAtN2IxNC0xMWRiLTlmZTEtMDgwMDIwMGM5YTY2Ii8+DQoJPGNvZGUgY29kZT0iNDg3NjUtMiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJBbGxlcmdpZXMsIGFkdmVyc2UgcmVhY3Rpb25zLCBhbGVydHMiLz4NCgk8c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUiLz4NCgk8ZWZmZWN0aXZlVGltZSB2YWx1ZT0iMjAxNjAxMDEiLz4NCgk8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiPg0KCSAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC43Ii8+DQoJICAgIDxpZCByb290PSI0YWRjMTAyMC03YjE0LTExZGItOWZlMS0wODAwMjAwYzlhNjYiLz4NCgkgICAgPGNvZGUgY29kZT0iNDE2MDk4MDAyIiBkaXNwbGF5TmFtZT0iZHJ1ZyBhbGxlcmd5IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIi8+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8ZWZmZWN0aXZlVGltZT4NCgkgICAgICA8bG93IHZhbHVlPSIyMDE2MDEwMSIvPg0KCSAgICA8L2VmZmVjdGl2ZVRpbWU+DQoJICAgIDx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGNvZGU9IjI4MjEwMDAwOSIgZGlzcGxheU5hbWU9IkFkdmVyc2UgcmVhY3Rpb24gdG8gc3Vic3RhbmNlIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIj4NCgkgICAgICA8b3JpZ2luYWxUZXh0Pg0KCQk8cmVmZXJlbmNlIHZhbHVlPSIjcmVhY3Rpb24xIi8+DQoJICAgICAgPC9vcmlnaW5hbFRleHQ+DQoJICAgIDwvdmFsdWU+DQoJICAgIA0KCSAgICA8cGFydGljaXBhbnQgdHlwZUNvZGU9IkNTTSI+DQoJICAgICAgPHBhcnRpY2lwYW50Um9sZSBjbGFzc0NvZGU9Ik1BTlUiPg0KCQk8cGxheWluZ0VudGl0eSBjbGFzc0NvZGU9Ik1NQVQiPg0KCQkgIDxjb2RlIGNvZGU9IjQwNTMiIGRpc3BsYXlOYW1lPSJFcnl0aHJvbXljaW4gQWxsZXJneSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi44OCIgY29kZVN5c3RlbU5hbWU9IlJ4Tm9ybSI+DQoJCSAgICA8b3JpZ2luYWxUZXh0Pg0KCQkgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjcmVhY3Rpb24xIi8+DQoJCSAgICA8L29yaWdpbmFsVGV4dD4NCgkJICA8L2NvZGU+DQoJCSAgPG5hbWU+RXJ5dGhyb215Y2luPC9uYW1lPg0KCQk8L3BsYXlpbmdFbnRpdHk+DQoJICAgICAgPC9wYXJ0aWNpcGFudFJvbGU+DQoJICAgIDwvcGFydGljaXBhbnQ+DQoJICAgIA0KCSAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiPg0KCSAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMjgiLz4NCgkJPGNvZGUgY29kZT0iMzM5OTktNCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJTdGF0dXMiLz4NCgkJPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+DQoJCTx2YWx1ZSB4c2k6dHlwZT0iQ0UiIGNvZGU9IjU1NTYxMDAzIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iQWN0aXZlIi8+DQoJICAgICAgPC9vYnNlcnZhdGlvbj4NCgkgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4NCgkgICAgDQoJICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iTUZTVCI+DQoJICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC45Ii8+DQoJCTwhLS0gUmVhY3Rpb24gb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+DQoJCTxpZCByb290PSI0YWRjMTAyMC03YjE0LTExZGItOWZlMS0wODAwMjAwYzlhNjQiLz4NCgkJPGNvZGUgbnVsbEZsYXZvcj0iTkEiLz4NCgkJPHRleHQ+DQoJCSAgPHJlZmVyZW5jZSB2YWx1ZT0iI3JlYWN0aW9uMSIvPg0KCQk8L3RleHQ+DQoJCTxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCQk8ZWZmZWN0aXZlVGltZT4NCgkJICA8bG93IHZhbHVlPSIyMDA5MDcxMSIvPg0KCQk8L2VmZmVjdGl2ZVRpbWU+DQoJCTx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGNvZGU9IjI0NzQ3MjAwNCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIgZGlzcGxheU5hbWU9IkhpdmVzIi8+DQoJICAgICAgPC9vYnNlcnZhdGlvbj4NCgkgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4NCgkgICAgDQoJICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+DQoJICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC44Ii8+DQoJCTwhLS0gKiogU2V2ZXJpdHkgb2JzZXJ2YXRpb24gdGVtcGxhdGUgKiogLS0+DQoJCTxjb2RlIGNvZGU9IlNFViIgZGlzcGxheU5hbWU9IlNldmVyaXR5IE9ic2VydmF0aW9uIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjQiIGNvZGVTeXN0ZW1OYW1lPSJBY3RDb2RlIi8+DQoJCTx0ZXh0Pg0KCQkgIDxyZWZlcmVuY2UgdmFsdWU9IiNzZXZlcml0eTEiLz4NCgkJPC90ZXh0Pg0KCQk8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgkJPHZhbHVlIHhzaTp0eXBlPSJDRCIgY29kZT0iMzcxOTI0MDA5IiBkaXNwbGF5TmFtZT0iTW9kZXJhdGUgdG8gc2V2ZXJlIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIi8+DQoJICAgICAgPC9vYnNlcnZhdGlvbj4NCgkgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4NCgkgIDwvb2JzZXJ2YXRpb24+DQoJPC9lbnRyeVJlbGF0aW9uc2hpcD4NCiAgICAgIDwvYWN0Pg0KICAgIDwvZW50cnk+DQogICAgDQogIDwvc2VjdGlvbj4NCjwvY29tcG9uZW50Pg0KCQkJICAgICAgDQoNCjwhLS0gDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpAQEhPU1BJVEFMIENPVVJTRQ0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+DQo8Y29tcG9uZW50Pg0KICA8c2VjdGlvbj4NCiAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjMuNSIvPg0KICAgIDxjb2RlIGNvZGU9Ijg2NDgtOCIgZGlzcGxheU5hbWU9IkhPU1BJVEFMIENPVVJTRSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiLz4NCiAgICA8dGl0bGU+SG9zcGl0YWwgQ291cnNlPC90aXRsZT4NCiAgICA8dGV4dD5UaGUgcGF0aWVudCB3YXMgYWRtaXR0ZWQgdG8gdGhlIE9ic2VydmF0aW9uIHVuaXQsIGFuZCBjb250aW51ZWQgb24gb3h5Z2VuIGFuZCBhbnRpYmlvdGljcy4NCg0KICAgIDxwYXJhZ3JhcGg+DQogICAgT3Zlcm5pZ2h0LCB0aGUgcGF0aWVudCBhcHBhcmVudGx5IGJlZ2FuIHRvIGNvbXBsYWluIG9mIGluY3JlYXNpbmcgY2hlc3QgcGFpbiBhbmQgYXBwZWFyZWQgdG8gdGhlIG51cnNlIHRvIGhhdmUgbW91bnRpbmcgZXhoYXVzdGlvbiBhbmQgcmVzcGlyYXRvcnkgZGlzdHJlc3MgYW5kIGEgcHVsc2Ugb3ggb2YgOTEgbiAyIExpdGVycy9taW4gb2YgMDIuPC9wYXJhZ3JhcGg+DQoNCiAgICANCiAgICA8cGFyYWdyYXBoPg0KICAgIEhpcyB0ZW1wZXJhdHVyZSBzcGlrZWQgdG8gMTAzLjggZGVncmVlcyBhbmQgaGlzIEJQIGRlY3JlYXNlZCB0byAxMDAvNjAuIEhpcyBibG9vZCBjdWx0dXJlcyBjYW1lIGJhY2sgcG9zaXRpdmUgZm9yIHN0YXBoeWxvY29jY3VzLCBjaGFyYWN0ZXJpemVkIGFzIGNvbW11bml0eSBhY3F1aXJlZCBNUlNBLiBIZSB3YXMgc2VlbiBieSB0aGUgY3JpdGljYWwgY2FyZSBzcGVjaWFsaXN0IHRocm91Z2ggdGVsZWNvbnN1bHQgYW5kIGRpYWdub3NlZCB3aXRoIHNlcHNpcy4gSGUgd2FzIGVtcGlyaWNhbGx5IHBsYWNlZCBvbiBWYW5jb215Y2luLCBwZW5kaW5nIGZ1cnRoZXIgY3VsdHVyZSByZXN1bHRzLiA8L3BhcmFncmFwaD4NCg0KICAgIDxwYXJhZ3JhcGg+CQkJCQkNCiAgICBBbHRob3VnaCBPMiBoYWQgYmVlbiBwbGFjZWQsIGVsZXZhdGluZyBoaXMgb3h5Z2VuIHNhdHVyYXRpb25zIHRvIHRoZSBtaWQgdG8gOTBzLCBoZSBjb250aW51ZWQgdG8gY29tcGxhaW4gb2Ygc3ltcHRvbXMsIGFzIG5vdGVkIGFib3ZlLCBhbmQgYmVjYW1lIHByb2dyZXNzaXZlbHkgbW9yZSBjb25mdXNlZC4gPC9wYXJhZ3JhcGg+DQoNCiAgICA8cGFyYWdyYXBoPg0KICAgICAgQ2hlc3QgeC1yYXkgZGVtb25zdHJhdGVkIGFuIGluY3JlYXNlIGluIHRoZSByaWdodCBsb3dlciBsb2JlIGluZmlsdHJhdGUsIGFuZCBzaWducyBvZiBlYXJseSBjb25nZXN0aXZlIGhlYXJ0IGZhaWx1cmUuDQogICAgPC9wYXJhZ3JhcGg+DQoNCiAgICA8cGFyYWdyYXBoPg0KICAgIEJlY2F1c2Ugb2YgY29uY2VybiByZWdhcmRpbmcgTVJTQSBwbmV1bW9uaWEsIHNlcHNpcywgYW5kIGRldmVsb3BpbmcgQ0hGLCB0aGUgaG9zcGl0YWxpc3Qgc2VydmljZSB3YXMgY29udGFjdGVkIGZvciB0cmFuc2ZlciB0byB0aGUgVGVydGlhcnkgTWVkaWNhbCBDZW50ZXIsIHdoaWNoIHdhcyBhcHByb3ZlZC4gPC9wYXJhZ3JhcGg+DQoNCiAgICA8cGFyYWdyYXBoPgkJDQogICAgUGVyIHRoZWlyIHJlcXVlc3QsIHRoZSBwYXRpZW50IHJlY2VpdmVkIG9uZSBncmFtIG9mIFJvY2VwaGluIGludHJhdmVub3VzbHkgYW5kIGEgbmFzb2dhc3RyaWMgYW5kIEZvbGV5IHdlcmUgcGxhY2VkLCBhbmQgYW4gYXJ0ZXJpYWwgYmxvb2QgZ2FzIHdhcyBkcmF3biBieSByZXNwaXJhdG9yeSB0aGVyYXB5LiA8L3BhcmFncmFwaD4NCiAgICA8L3RleHQ+IA0KDQogICAgDQogIDwvc2VjdGlvbj4NCjwvY29tcG9uZW50Pg0KDQoNCjwhLS0NCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCkBARElTQ0hBUkdFIERJQUdOT1NJUyANCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0tPg0KPGNvbXBvbmVudD4NCiAgPHNlY3Rpb24+DQogICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuMi4yNCIvPg0KICAgIDxpZCBleHRlbnNpb249Ijk5MzcwMTIiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjE5Ii8+DQogICAgPGNvZGUgY29kZT0iMTE1MzUtMiIgZGlzcGxheU5hbWU9Ikhvc3BpdGFsIERpc2NoYXJnZSBEaWFnbm9zaXMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIi8+DQogICAgPHRpdGxlPkRpc2NoYXJnZSBEaWFnbm9zaXM8L3RpdGxlPg0KICAgIDx0ZXh0Pg0KICAgICAgPHBhcmFncmFwaD5QbmV1bW9uaWE8L3BhcmFncmFwaD4NCiAgICAgIDxwYXJhZ3JhcGg+DQoJVGhpcyBwYXRpZW50IGhhcyBhbiBhY3V0ZSBwbmV1bW9uaWEuIA0KICAgICAgPC9wYXJhZ3JhcGg+DQogICAgICA8cGFyYWdyYXBoPg0KCUF0IHRoaXMgcG9pbnQsIEkgYW0gdW5hYmxlIHRvIHJ1bGUgb3V0IG15b2NhcmRpYWwgaW5mYXJjdGlvbi4gPGJyLz4NCglDYW5ub3QgcnVsZSBvdXQgTUkgaW4gc3BpdGUgb2YgYSByZWxhdGl2ZWx5IG5vcm1hbCBFS0cuDQogICAgICA8L3BhcmFncmFwaD4NCiAgICAgIDxici8+DQogICAgPC90ZXh0Pg0KICAgIDxlbnRyeT4NCiAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMzMiLz4NCgk8aWQgcm9vdD0iNWE3ODQyNjAtNjg1Ni00ZjM4LTk2MzgtODBjNzUxYWZmMmZiIi8+DQoJPGNvZGUgY29kZT0iMTE1MzUtMiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJIT1NQSVRBTCBESVNDSEFSR0UgRElBR05PU0lTIi8+DQoJPHN0YXR1c0NvZGUgY29kZT0iYWN0aXZlIi8+DQoJPGVmZmVjdGl2ZVRpbWU+DQoJICA8bG93IHZhbHVlPSIyMDE3MDEwMiIvPg0KCTwvZWZmZWN0aXZlVGltZT4NCgk8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiIGludmVyc2lvbkluZD0iZmFsc2UiPg0KCSAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC40Ii8+DQoJICAgIDxpZCByb290PSJhYjE3OTFiMC01YzcxLTExZGItYjBkZS0wODAwMjAwYzlhNjYiLz4NCgkgICAgPGNvZGUgY29kZT0iNDA5NTg2MDA2IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iQ29tcGxhaW50Ii8+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8ZWZmZWN0aXZlVGltZT4NCgkgICAgICA8bG93IHZhbHVlPSIyMDE3MDEwMiIvPg0KCSAgICA8L2VmZmVjdGl2ZVRpbWU+DQoJICAgIDx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGNvZGU9IjIzMzYwNDAwNyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIgZGlzcGxheU5hbWU9IlBuZXVtb25pYSIvPg0KCSAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlJFRlIiPg0KCSAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJCTwhLS0gUHJvYmxlbSBzdGF0dXMgb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+DQoJCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuNiIvPg0KCQk8Y29kZSBjb2RlPSIzMzk5OS00IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IlN0YXR1cyIvPg0KCQk8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgkJPHZhbHVlIHhzaTp0eXBlPSJDRCIgY29kZT0iNTU1NjEwMDMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJBY3RpdmUiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQgQ1QiLz4NCgkgICAgICA8L29ic2VydmF0aW9uPg0KCSAgICA8L2VudHJ5UmVsYXRpb25zaGlwPg0KCSAgPC9vYnNlcnZhdGlvbj4NCgk8L2VudHJ5UmVsYXRpb25zaGlwPg0KICAgICAgPC9hY3Q+DQogICAgPC9lbnRyeT4NCiAgPC9zZWN0aW9uPg0KPC9jb21wb25lbnQ+DQoNCg0KDQo8IS0tDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpAQERJU0NIQVJHRSBNRURJQ0FUSU9OUw0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+CQkJCSAgICANCg0KPGNvbXBvbmVudD4NCiAgDQogIDxzZWN0aW9uPg0KICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjIuMTEiLz4NCiAgICA8IS0tIEhvc3BpdGFsIERpc2NoYXJnZSBTdW1tYXJ5IHRlbXBsYXRlSWQgLS0+DQogICAgPGNvZGUgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGU9IjEwMTgzLTIiIGRpc3BsYXlOYW1lPSJIT1NQSVRBTCBESVNDSEFSR0UgTUVESUNBVElPTlMgIi8+DQogICAgPHRpdGxlPkRpc2NoYXJnZSBNZWRpY2F0aW9uczwvdGl0bGU+DQogICAgPHRleHQ+DQogICAgICA8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0iMTAwJSI+DQoJDQoJPHRoZWFkPgkgIA0KCSAgPHRyPg0KCSAgICA8dGg+TWVkaWNhdGlvbjwvdGg+DQoJICAgIDx0aD5EaXJlY3Rpb25zPC90aD4NCgkgICAgPHRoPlN0YXJ0IERhdGU8L3RoPg0KCSAgICA8dGg+U3RhdHVzPC90aD4NCgkgICAgPHRoPkluZGljYXRpb25zPC90aD4NCgkgIDwvdHI+DQoJPC90aGVhZD4NCgk8dGJvZHk+DQoNCgkgIDx0cj4NCgkgICAgPHRkPlJvY2VwaGluIDEgZ3JhbTwvdGQ+DQoJICAgIDx0ZD5JbnRyYXZlbm91czwvdGQ+DQoJICAgIDx0ZD4yMDE3LTAxLTAxPC90ZD4NCgkgICAgPHRkPkFjdGl2ZTwvdGQ+DQoJICAgIDx0ZD5QbmV1bW9uaWEgKDYwNDAwNyBTTk9NRUQgQ1QpPC90ZD4NCgkgIDwvdHI+DQoNCgkgIDx0cj4NCgkgICAgPHRkPlZhbmNvbXljaW4gNSBNRy9NTCBJbmplY3RhYmxlIFNvbHV0aW9uPC90ZD4NCgkgICAgPHRkPkludHJhdmVub3VzPC90ZD4NCgkgICAgPHRkPjIwMTctMDEtMDE8L3RkPg0KCSAgICA8dGQ+QWN0aXZlPC90ZD4NCgkgICAgPHRkPk1SU0EgKDExNTMyOTAwMSBTTk9NRUQgQ1QpPC90ZD4NCgkgIDwvdHI+DQoJICANCgkgIDx0cj4NCgkgICAgPHRkPlByb3ZlbnRpbCAwLjA5IE1HL0FDVFVBVCBpbmhhbGFudCBzb2x1dGlvbjwvdGQ+DQoJICAgIDx0ZD4yIHB1ZmZzIFFJRCBQUk4gd2hlZXppbmc8L3RkPg0KCSAgICA8dGQ+MjAxMS0wMy0wMTwvdGQ+DQoJICAgIDx0ZD5BY3RpdmU8L3RkPg0KCSAgICA8dGQ+QnJvbmNoaXRpcyAoMzIzOTgwMDQgU05PTUVEIENUKTwvdGQ+DQoJICA8L3RyPg0KCSAgDQoJICA8dHI+DQoJICAgIDx0ZD5NZXRvcHJvbG9sIFRhcnRyYXRlIDI1IE1HIE9yYWwgVGFibGV0PC90ZD4NCgkgICAgPHRkPlR3aWNlIGRhaWx5PC90ZD4NCgkgICAgPHRkPjIwMTctMDEtMDE8L3RkPg0KCSAgICA8dGQ+QWN0aXZlPC90ZD4NCgkgICAgPHRkPkh5cGVydGVuc2lvbiAoNTk2MjEwMCBTTk9NRUQgQ1QpPC90ZD4NCgkgIDwvdHI+DQoJICANCgk8L3Rib2R5Pg0KICAgICAgPC90YWJsZT4NCiAgICA8L3RleHQ+DQogICAgDQogICAgPCEtLSBAUHJvdmVudGlsIChBbGJ1dGVyb2wgU3VsZmF0ZSkgLS0+DQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbiBjbGFzc0NvZGU9IlNCQURNIiBtb29kQ29kZT0iRVZOIj4NCiAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4xNiIgZXh0ZW5zaW9uPSIyMDE0LTA2LTA5Ii8+DQogICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMTYiLz4NCiAgICAgICAgPGlkIHJvb3Q9IjZjODQ0Yzc1LWFhMzQtNDExYy1iN2JkLTVlNGE5ZjIwNmUyOSIvPg0KICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUiLz4NCiAgICAgICAgPGVmZmVjdGl2ZVRpbWUgeHNpOnR5cGU9IklWTF9UUyI+DQogICAgICAgICAgPGxvdyB2YWx1ZT0iMjAxNjAxMDEiLz4NCiAgICAgICAgICA8aGlnaCB2YWx1ZT0iMjAxNzAxMDEiLz4NCiAgICAgICAgPC9lZmZlY3RpdmVUaW1lPg0KICAgICAgICA8ZWZmZWN0aXZlVGltZSB4c2k6dHlwZT0iUElWTF9UUyIgaW5zdGl0dXRpb25TcGVjaWZpZWQ9InRydWUiIG9wZXJhdG9yPSJBIj4NCiAgICAgICAgICA8cGVyaW9kIHZhbHVlPSIyNCIgdW5pdD0iaCIvPg0KICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+DQoJPHJvdXRlQ29kZSBjb2RlPSJDMzgyMTYiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjMuMjYuMS4xIiBjb2RlU3lzdGVtTmFtZT0iTkNJIFRoZXNhdXJ1cyIgZGlzcGxheU5hbWU9IlJFU1BJUkFUT1JZIChJTkhBTEFUSU9OKSIvPg0KICAgICAgICA8ZG9zZVF1YW50aXR5IHZhbHVlPSIxIi8+DQogICAgICAgIDxjb25zdW1hYmxlPg0KICAgICAgICAgIDxtYW51ZmFjdHVyZWRQcm9kdWN0IGNsYXNzQ29kZT0iTUFOVSI+DQogICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjIzIiBleHRlbnNpb249IjIwMTQtMDYtMDkiLz4NCiAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMjMiLz4NCiAgICAgICAgICAgIDxpZCByb290PSIyYTYyMDE1NS05ZDExLTQzOWUtOTJiMy01ZDk4MTZmZjRlZTgiLz4NCiAgICAgICAgICAgIDxtYW51ZmFjdHVyZWRNYXRlcmlhbD4NCiAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzI5NDk4IiBkaXNwbGF5TmFtZT0iQWxidXRlcm9sIDAuMDkgTUcvQUNUVUFUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljg4IiBjb2RlU3lzdGVtTmFtZT0iUnhOb3JtIi8+DQogICAgICAgICAgICA8L21hbnVmYWN0dXJlZE1hdGVyaWFsPg0KICAgICAgICAgIDwvbWFudWZhY3R1cmVkUHJvZHVjdD4NCiAgICAgICAgPC9jb25zdW1hYmxlPg0KICAgICAgPC9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbj4NCiAgICA8L2VudHJ5PiAgICANCg0KICAgIDwhLS0gQE1ldG9wcm9sb2wgIC0tPg0KICAgIDxlbnRyeSB0eXBlQ29kZT0iRFJJViI+DQogICAgICA8c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24gY2xhc3NDb2RlPSJTQkFETSIgbW9vZENvZGU9IkVWTiI+DQogICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMTYiIGV4dGVuc2lvbj0iMjAxNC0wNi0wOSIvPg0KICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjE2Ii8+DQogICAgICAgIDxpZCByb290PSI2Yzg0NGM3NS1hYTM0LTQxMWMtYjdiZC01ZTRhOWYyMDZlMjkiLz4NCiAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iYWN0aXZlIi8+DQogICAgICAgIDxlZmZlY3RpdmVUaW1lIHhzaTp0eXBlPSJJVkxfVFMiPg0KICAgICAgICAgIDxsb3cgdmFsdWU9IjIwMTYwMTAxIi8+DQogICAgICAgICAgPGhpZ2ggdmFsdWU9IjIwMTcwMTAxIi8+DQogICAgICAgIDwvZWZmZWN0aXZlVGltZT4NCiAgICAgICAgPGVmZmVjdGl2ZVRpbWUgeHNpOnR5cGU9IlBJVkxfVFMiIGluc3RpdHV0aW9uU3BlY2lmaWVkPSJ0cnVlIiBvcGVyYXRvcj0iQSI+DQogICAgICAgICAgPHBlcmlvZCB2YWx1ZT0iMjQiIHVuaXQ9ImgiLz4NCiAgICAgICAgPC9lZmZlY3RpdmVUaW1lPg0KCTxyb3V0ZUNvZGUgY29kZT0iQzM4Mjg4IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My4zLjI2LjEuMSIgY29kZVN5c3RlbU5hbWU9Ik5DSSBUaGVzYXVydXMiIGRpc3BsYXlOYW1lPSJPUkFMIi8+DQogICAgICAgIDxkb3NlUXVhbnRpdHkgdmFsdWU9IjEiLz4NCiAgICAgICAgPGNvbnN1bWFibGU+DQogICAgICAgICAgPG1hbnVmYWN0dXJlZFByb2R1Y3QgY2xhc3NDb2RlPSJNQU5VIj4NCiAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMjMiIGV4dGVuc2lvbj0iMjAxNC0wNi0wOSIvPg0KICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yMyIvPg0KICAgICAgICAgICAgPGlkIHJvb3Q9IjJhNjIwMTU1LTlkMTEtNDM5ZS05MmIzLTVkOTgxNmZmNGVlOCIvPg0KICAgICAgICAgICAgPG1hbnVmYWN0dXJlZE1hdGVyaWFsPg0KICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI4NjY5MjQiIGRpc3BsYXlOYW1lPSJNZXRvcHJvbG9sIFRhcnRyYXRlIDI1IE1HIE9yYWwgVGFibGV0IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljg4IiBjb2RlU3lzdGVtTmFtZT0iUnhOb3JtIi8+DQogICAgICAgICAgICA8L21hbnVmYWN0dXJlZE1hdGVyaWFsPg0KICAgICAgICAgIDwvbWFudWZhY3R1cmVkUHJvZHVjdD4NCiAgICAgICAgPC9jb25zdW1hYmxlPg0KICAgICAgPC9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbj4NCiAgICA8L2VudHJ5Pg0KICAgIA0KICAgIDwhLS0gQFZhbmNvbXljaW4gNSBNRy9NTCBJbmplY3RhYmxlIFNvbHV0aW9uICAtLT4NCiAgICA8ZW50cnkgdHlwZUNvZGU9IkRSSVYiPg0KICAgICAgPHN1YnN0YW5jZUFkbWluaXN0cmF0aW9uIGNsYXNzQ29kZT0iU0JBRE0iIG1vb2RDb2RlPSJFVk4iPg0KICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjE2IiBleHRlbnNpb249IjIwMTQtMDYtMDkiLz4NCiAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4xNiIvPg0KICAgICAgICA8aWQgcm9vdD0iNmM4NDRjNzUtYWEzNC00MTFjLWI3YmQtNWU0YTlmMjA2ZTI5Ii8+DQogICAgICAgIDxzdGF0dXNDb2RlIGNvZGU9ImFjdGl2ZSIvPg0KICAgICAgICA8ZWZmZWN0aXZlVGltZSB4c2k6dHlwZT0iSVZMX1RTIj4NCiAgICAgICAgICA8bG93IHZhbHVlPSIyMDE2MDEwMSIvPg0KICAgICAgICAgIDxoaWdoIHZhbHVlPSIyMDE3MDEwMSIvPg0KICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+DQogICAgICAgIDxlZmZlY3RpdmVUaW1lIHhzaTp0eXBlPSJQSVZMX1RTIiBpbnN0aXR1dGlvblNwZWNpZmllZD0idHJ1ZSIgb3BlcmF0b3I9IkEiPg0KICAgICAgICAgIDxwZXJpb2QgdmFsdWU9IjI0IiB1bml0PSJoIi8+DQogICAgICAgIDwvZWZmZWN0aXZlVGltZT4NCgk8cm91dGVDb2RlIGNvZGU9IkMzODI3NiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuMy4yNi4xLjEiIGNvZGVTeXN0ZW1OYW1lPSJOQ0kgVGhlc2F1cnVzIiBkaXNwbGF5TmFtZT0iSU5UUkFWRU5PVVMiLz4NCiAgICAgICAgPGRvc2VRdWFudGl0eSB2YWx1ZT0iMSIvPg0KICAgICAgICA8Y29uc3VtYWJsZT4NCiAgICAgICAgICA8bWFudWZhY3R1cmVkUHJvZHVjdCBjbGFzc0NvZGU9Ik1BTlUiPg0KICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yMyIgZXh0ZW5zaW9uPSIyMDE0LTA2LTA5Ii8+DQogICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjIzIi8+DQogICAgICAgICAgICA8aWQgcm9vdD0iMmE2MjAxNTUtOWQxMS00MzllLTkyYjMtNWQ5ODE2ZmY0ZWU4Ii8+DQogICAgICAgICAgICA8bWFudWZhY3R1cmVkTWF0ZXJpYWw+DQogICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjMxMzU3NCIgZGlzcGxheU5hbWU9IlZhbmNvbXljaW4gNSBNRy9NTCBJbmplY3RhYmxlIFNvbHV0aW9uIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljg4IiBjb2RlU3lzdGVtTmFtZT0iUnhOb3JtIi8+DQogICAgICAgICAgICA8L21hbnVmYWN0dXJlZE1hdGVyaWFsPg0KICAgICAgICAgIDwvbWFudWZhY3R1cmVkUHJvZHVjdD4NCiAgICAgICAgPC9jb25zdW1hYmxlPg0KICAgICAgPC9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbj4NCiAgICA8L2VudHJ5Pg0KICA8L3NlY3Rpb24+DQo8L2NvbXBvbmVudD4NCg0KDQo8IS0tDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpAQFBMQU4gT0YgQ0FSRQ0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+DQo8Y29tcG9uZW50Pg0KICA8c2VjdGlvbj4NCiAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi4yLjEwIi8+DQogICAgPCEtLSAgKioqKiBQbGFuIG9mIENhcmUgc2VjdGlvbiB0ZW1wbGF0ZSAgKioqKiAtLT4NCiAgICA8Y29kZSBjb2RlPSIxODc3Ni01IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IlRyZWF0bWVudCBwbGFuIi8+DQogICAgPHRpdGxlPlBsYW4gb2YgQ2FyZTwvdGl0bGU+DQogICAgPHRleHQ+DQogICAgICA8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0iMTAwJSI+DQoJPHRoZWFkPg0KCSAgPHRyPg0KCSAgICA8dGg+UGxhbm5lZCBBY3Rpdml0eTwvdGg+DQoJICAgIDx0aD5QbGFubmVkIERhdGU8L3RoPg0KCSAgPC90cj4NCgk8L3RoZWFkPg0KCTx0Ym9keT4NCgkgIA0KCSAgPHRyPg0KCSAgICA8dGQ+SW50cmF2ZW5vdXMgUm9jZXBoaW4gYXQgb25lIGdyYW0gZG9zYWdlPC90ZD4NCgkgICAgPHRkPkphbiAwMiwgMjAxNzwvdGQ+DQoJICA8L3RyPg0KDQoJICA8dHI+DQoJICAgIDx0ZD5OYXNhbCBveHlnZW4gYXQgMiBsaXRlcnMgcGVyIG1pbnV0ZTwvdGQ+DQoJICAgIDx0ZD5KYW4gMDIsIDIwMTc8L3RkPg0KCSAgPC90cj4NCg0KCSAgPHRyPg0KCSAgICA8dGQ+TmFzb2dhc3RyaWMgdHViZTwvdGQ+DQoJICAgIDx0ZD5KYW4gMDIsIDIwMTc8L3RkPg0KCSAgPC90cj4NCg0KCSAgPHRyPg0KCSAgICA8dGQ+Rm9sZXkgY2F0aGV0ZXIgPC90ZD4NCgkgICAgPHRkPkphbiAwMiwgMjAxNzwvdGQ+DQoJICA8L3RyPg0KDQoJICA8dHI+DQoJICAgIDx0ZD5UcmFuc2ZlciB0byB0ZXJ0aWFyeSBob3NwaXRhbCBieSBhbWJ1bGFuY2U8L3RkPg0KCSAgICA8dGQ+SmFuIDAyLCAyMDE3PC90ZD4NCgkgIDwvdHI+DQoJICANCgk8L3Rib2R5Pg0KICAgICAgPC90YWJsZT4NCiAgICA8L3RleHQ+DQoNCiAgICA8IS0tIEBAQFRPRE8gVGhlc2UgY2FyZSBwbGFuIGVudHJpZXMgbm8gbG9uZ2VyIG1ha2Ugc2Vuc2UgZm9yIHRoZSBEZUxleXMgcGxhbiBhYm92ZSAtLT4gDQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IlJRTyI+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC40NCIvPg0KCTwhLS0gICBQbGFuIG9mIENhcmUgQWN0aXZpdHkgT2JzZXJ2YXRpb24gdGVtcGxhdGUgICAtLT4NCgk8aWQgcm9vdD0iOWE2ZDFiYWMtMTdkMy00MTk1LTg5YTQtMTEyMWJjODA5YjRhIi8+DQoJPGNvZGUgY29kZT0iMzEwNjM0MDA1IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iQ29sb25vc2NvcHkiLz4NCgk8c3RhdHVzQ29kZSBjb2RlPSJuZXciLz4NCgk8ZWZmZWN0aXZlVGltZT4NCgkgIDxjZW50ZXIgdmFsdWU9IjIwMDAwNDIxIi8+DQoJPC9lZmZlY3RpdmVUaW1lPg0KICAgICAgPC9vYnNlcnZhdGlvbj4NCiAgICA8L2VudHJ5Pg0KICAgIDxlbnRyeT4NCiAgICAgIDxhY3QgbW9vZENvZGU9IlJRTyIgY2xhc3NDb2RlPSJBQ1QiPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMzkiLz4NCgk8IS0tICAqKioqICBQbGFuIG9mIENhcmUgQWN0aXZpdHkgQWN0IHRlbXBsYXRlICAgKioqKiAtLT4NCgk8aWQgcm9vdD0iOWE2ZDFiYWMtMTdkMy00MTk1LTg5YTQtMTEyMWJjODA5YTVjIi8+DQoJPGNvZGUgY29kZT0iMzEwNjM0MDA1IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iQ29sb25vc2NvcHkiLz4NCgk8c3RhdHVzQ29kZSBjb2RlPSJuZXciLz4NCgk8ZWZmZWN0aXZlVGltZT4NCgkgIDxjZW50ZXIgdmFsdWU9IjIwMDAwNDIxIi8+DQoJPC9lZmZlY3RpdmVUaW1lPg0KICAgICAgPC9hY3Q+DQogICAgPC9lbnRyeT4NCiAgICA8ZW50cnk+DQogICAgICA8ZW5jb3VudGVyIG1vb2RDb2RlPSJJTlQiIGNsYXNzQ29kZT0iRU5DIj4NCgk8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjQwIi8+DQoJPCEtLSAgKioqKiAgUGxhbiBvZiBDYXJlIEFjdGl2aXR5IEVuY291bnRlciB0ZW1wbGF0ZSAgKioqKiAtLT4NCgk8aWQgcm9vdD0iOWE2ZDFiYWMtMTdkMy00MTk1LTg5YTQtMTEyMWJjODA5YjRkIi8+DQogICAgICA8L2VuY291bnRlcj4NCiAgICA8L2VudHJ5Pg0KICAgIDxlbnRyeT4NCiAgICAgIDxwcm9jZWR1cmUgbW9vZENvZGU9IlJRTyIgY2xhc3NDb2RlPSJQUk9DIj4NCgk8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjQxIi8+DQoJPCEtLSAqKiBQbGFuIG9mIENhcmUgQWN0aXZpdHkgUHJvY2VkdXJlIHRlbXBsYXRlICoqIC0tPg0KCTxpZCByb290PSI5YTZkMWJhYy0xN2QzLTQxOTUtODljNC0xMTIxYmM4MDliNWEiLz4NCgk8Y29kZSBjb2RlPSIzMTA2MzQwMDUiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJDb2xvbm9zY29weSIvPg0KCTxzdGF0dXNDb2RlIGNvZGU9Im5ldyIvPg0KCTxlZmZlY3RpdmVUaW1lPg0KCSAgPGNlbnRlciB2YWx1ZT0iMjAwMDA0MjEiLz4NCgk8L2VmZmVjdGl2ZVRpbWU+DQogICAgICA8L3Byb2NlZHVyZT4NCiAgICA8L2VudHJ5Pg0KICA8L3NlY3Rpb24+DQo8L2NvbXBvbmVudD4NCg0KDQo8IS0tDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KQEBBRE1JU1NJT04gRElBR05PU0lTDQoJCQkgICAgIA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotLT4NCgkJCQ0KPGNvbXBvbmVudD4NCiAgPHNlY3Rpb24+DQogICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuMi40MyIvPg0KICAgIDxjb2RlIGNvZGU9IjQ2MjQxLTYiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iSG9zcGl0YWwgQWRtaXNzaW9uIERpYWdub3NpcyIvPg0KICAgIDx0aXRsZT5BZG1pc3Npb24gRGlhZ25vc2lzPC90aXRsZT4NCiAgICA8dGV4dD5QbmV1bW9uaWE8L3RleHQ+DQogICAgPGVudHJ5Pg0KICAgICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4zNCIvPg0KCTxpZCByb290PSI1YTc4NDI2MC02ODU2LTRmMzgtOTYzOC04MGM3NTFhZmYyZmIiLz4NCgk8Y29kZSBjb2RlPSI0NjI0MS02IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9Ikhvc3BpdGFsIEFkbWlzc2lvbiBEaWFnbm9zaXMiLz4NCgk8c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUiLz4NCgk8ZWZmZWN0aXZlVGltZT4NCgkgIDxsb3cgdmFsdWU9IjIwMTcwMTAxIi8+DQoJPC9lZmZlY3RpdmVUaW1lPg0KCTxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiIgaW52ZXJzaW9uSW5kPSJmYWxzZSI+DQoJICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjQiLz4NCgkgICAgPGlkIHJvb3Q9ImFiMTc5MWIwLTVjNzEtMTFkYi1iMGRlLTA4MDAyMDBjOWE2NiIvPg0KCSAgICA8Y29kZSBjb2RlPSI0MDk1ODYwMDYiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJDb21wbGFpbnQiLz4NCgkgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+DQoJICAgIDxlZmZlY3RpdmVUaW1lPg0KCSAgICAgIDxsb3cgdmFsdWU9IjIwMTcwMTAxIi8+DQoJICAgIDwvZWZmZWN0aXZlVGltZT4NCgkgICAgPHZhbHVlIHhzaTp0eXBlPSJDRCIgY29kZT0iMjMzNjA0MDA3IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iUG5ldW1vbmlhIi8+DQoJICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iUkVGUiI+DQoJICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC42Ii8+DQoJCTxjb2RlIGNvZGU9IjMzOTk5LTQiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iU3RhdHVzIi8+DQoJCTxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCQk8dmFsdWUgeHNpOnR5cGU9IkNEIiBjb2RlPSI1NTU2MTAwMyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIgZGlzcGxheU5hbWU9IkFjdGl2ZSIgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCIvPg0KCSAgICAgIDwvb2JzZXJ2YXRpb24+DQoJICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+DQoJICA8L29ic2VydmF0aW9uPg0KCTwvZW50cnlSZWxhdGlvbnNoaXA+DQogICAgICA8L2FjdD4NCiAgICA8L2VudHJ5Pg0KICA8L3NlY3Rpb24+DQo8L2NvbXBvbmVudD4NCg0KDQo8IS0tDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpAQE1FRElDQVRJT05TIE9OIEFETUlTU0lPTg0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+DQoNCjxjb21wb25lbnQ+DQogIA0KICA8c2VjdGlvbj4NCiAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi4yLjExIi8+DQogICAgPGNvZGUgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGU9IjQyMzQ2LTciIGRpc3BsYXlOYW1lPSJNRURJQ0FUSU9OUyBPTiBBRE1JU1NJT04iLz4NCiAgICA8dGl0bGU+TWVkaWNhdGlvbnMgb24gQWRtaXNzaW9uPC90aXRsZT4NCiAgICA8dGV4dD4NCiAgICAgIA0KICAgICAgPHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjEwMCUiPg0KCTx0aGVhZD4NCgkgIDx0cj4NCgkgICAgPHRoPk1lZGljYXRpb248L3RoPg0KCSAgICA8dGg+RGlyZWN0aW9uczwvdGg+DQoJICAgIDx0aD5TdGFydCBEYXRlPC90aD4NCgkgICAgPHRoPlN0YXR1czwvdGg+DQoJICAgIDx0aD5JbmRpY2F0aW9uczwvdGg+DQoJICA8L3RyPg0KCTwvdGhlYWQ+DQoJPHRib2R5Pg0KCSAgPHRyPg0KCSAgICA8dGQ+UHJvdmVudGlsIDAuMDkgTUcvQUNUVUFUIGluaGFsYW50IHNvbHV0aW9uPC90ZD4NCgkgICAgPHRkPjIgcHVmZnMgUUlEIFBSTiB3aGVlemluZzwvdGQ+DQoJICAgIDx0ZD4yMDE3LTAxLTAxPC90ZD4NCgkgICAgPHRkPkFjdGl2ZTwvdGQ+DQoJICAgIDx0ZD5QbmV1bW9uaWEgKDIzMzYwNDAwNyBTTk9NRUQgQ1QpPC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5NZXRvcHJvbG9sIFRhcnRyYXRlIDI1IE1HIE9yYWwgVGFibGV0PC90ZD4NCgkgICAgPHRkPlR3aWNlIGRhaWx5PC90ZD4NCgkgICAgPHRkPjIwMTctMDEtMDE8L3RkPg0KCSAgICA8dGQ+QWN0aXZlPC90ZD4NCgkgICAgPHRkPkh5cGVydGVuc2lvbiAoNTk2MjEwMCBTTk9NRUQgQ1QpPC90ZD4NCgkgIDwvdHI+DQoJPC90Ym9keT4NCiAgICAgIDwvdGFibGU+DQogICAgPC90ZXh0Pg0KDQogICAgPCEtLSBAQWxidXRlcm9sIEBQcm92ZW50aWwgLS0+DQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbiBjbGFzc0NvZGU9IlNCQURNIiBtb29kQ29kZT0iRVZOIj4NCiAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4xNiIgZXh0ZW5zaW9uPSIyMDE0LTA2LTA5Ii8+DQogICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMTYiLz4NCiAgICAgICAgPGlkIHJvb3Q9IjZjODQ0Yzc1LWFhMzQtNDExYy1iN2JkLTVlNGE5ZjIwNmUyOSIvPg0KICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUiLz4NCiAgICAgICAgPGVmZmVjdGl2ZVRpbWUgeHNpOnR5cGU9IklWTF9UUyI+DQogICAgICAgICAgPGxvdyB2YWx1ZT0iMjAxNjAxMDEiLz4NCiAgICAgICAgICA8aGlnaCB2YWx1ZT0iMjAxNzAxMDEiLz4NCiAgICAgICAgPC9lZmZlY3RpdmVUaW1lPg0KICAgICAgICA8ZWZmZWN0aXZlVGltZSB4c2k6dHlwZT0iUElWTF9UUyIgaW5zdGl0dXRpb25TcGVjaWZpZWQ9InRydWUiIG9wZXJhdG9yPSJBIj4NCiAgICAgICAgICA8cGVyaW9kIHZhbHVlPSIyNCIgdW5pdD0iaCIvPg0KICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+DQoJPHJvdXRlQ29kZSBjb2RlPSJDMzgyMTYiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjMuMjYuMS4xIiBjb2RlU3lzdGVtTmFtZT0iTkNJIFRoZXNhdXJ1cyIgZGlzcGxheU5hbWU9IlJFU1BJUkFUT1JZIChJTkhBTEFUSU9OKSIvPg0KICAgICAgICA8ZG9zZVF1YW50aXR5IHZhbHVlPSIxIi8+DQogICAgICAgIDxjb25zdW1hYmxlPg0KICAgICAgICAgIDxtYW51ZmFjdHVyZWRQcm9kdWN0IGNsYXNzQ29kZT0iTUFOVSI+DQogICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjIzIiBleHRlbnNpb249IjIwMTQtMDYtMDkiLz4NCiAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMjMiLz4NCiAgICAgICAgICAgIDxpZCByb290PSIyYTYyMDE1NS05ZDExLTQzOWUtOTJiMy01ZDk4MTZmZjRlZTgiLz4NCiAgICAgICAgICAgIDxtYW51ZmFjdHVyZWRNYXRlcmlhbD4NCiAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzI5NDk4IiBkaXNwbGF5TmFtZT0iQWxidXRlcm9sIDAuMDkgTUcvQUNUVUFUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljg4IiBjb2RlU3lzdGVtTmFtZT0iUnhOb3JtIi8+DQogICAgICAgICAgICA8L21hbnVmYWN0dXJlZE1hdGVyaWFsPg0KICAgICAgICAgIDwvbWFudWZhY3R1cmVkUHJvZHVjdD4NCiAgICAgICAgPC9jb25zdW1hYmxlPg0KICAgICAgPC9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbj4NCiAgICA8L2VudHJ5Pg0KDQogICAgPCEtLSBATWV0b3Byb2xvbCA4NjY5MjQgLS0+DQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbiBjbGFzc0NvZGU9IlNCQURNIiBtb29kQ29kZT0iRVZOIj4NCiAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4xNiIgZXh0ZW5zaW9uPSIyMDE0LTA2LTA5Ii8+DQogICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMTYiLz4NCiAgICAgICAgPGlkIHJvb3Q9IjZjODQ0Yzc1LWFhMzQtNDExYy1iN2JkLTVlNGE5ZjIwNmUyOSIvPg0KICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUiLz4NCiAgICAgICAgPGVmZmVjdGl2ZVRpbWUgeHNpOnR5cGU9IklWTF9UUyI+DQogICAgICAgICAgPGxvdyB2YWx1ZT0iMjAxNjAxMDEiLz4NCiAgICAgICAgICA8aGlnaCB2YWx1ZT0iMjAxNzAxMDEiLz4NCiAgICAgICAgPC9lZmZlY3RpdmVUaW1lPg0KICAgICAgICA8ZWZmZWN0aXZlVGltZSB4c2k6dHlwZT0iUElWTF9UUyIgaW5zdGl0dXRpb25TcGVjaWZpZWQ9InRydWUiIG9wZXJhdG9yPSJBIj4NCiAgICAgICAgICA8cGVyaW9kIHZhbHVlPSIyNCIgdW5pdD0iaCIvPg0KICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+DQoJPHJvdXRlQ29kZSBjb2RlPSJDMzgyODgiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjMuMjYuMS4xIiBjb2RlU3lzdGVtTmFtZT0iTkNJIFRoZXNhdXJ1cyIgZGlzcGxheU5hbWU9Ik9SQUwiLz4NCiAgICAgICAgPGRvc2VRdWFudGl0eSB2YWx1ZT0iMSIvPg0KICAgICAgICA8Y29uc3VtYWJsZT4NCiAgICAgICAgICA8bWFudWZhY3R1cmVkUHJvZHVjdCBjbGFzc0NvZGU9Ik1BTlUiPg0KICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yMyIgZXh0ZW5zaW9uPSIyMDE0LTA2LTA5Ii8+DQogICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjIzIi8+DQogICAgICAgICAgICA8aWQgcm9vdD0iMmE2MjAxNTUtOWQxMS00MzllLTkyYjMtNWQ5ODE2ZmY0ZWU4Ii8+DQogICAgICAgICAgICA8bWFudWZhY3R1cmVkTWF0ZXJpYWw+DQogICAgICAgICAgICAgIDxjb2RlIGNvZGU9Ijg2NjkyNCIgZGlzcGxheU5hbWU9Ik1ldG9wcm9sb2wgVGFydHJhdGUgMjUgTUcgT3JhbCBUYWJsZXQiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuODgiIGNvZGVTeXN0ZW1OYW1lPSJSeE5vcm0iLz4NCiAgICAgICAgICAgIDwvbWFudWZhY3R1cmVkTWF0ZXJpYWw+DQogICAgICAgICAgPC9tYW51ZmFjdHVyZWRQcm9kdWN0Pg0KICAgICAgICA8L2NvbnN1bWFibGU+DQogICAgICA8L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uPg0KICAgIDwvZW50cnk+DQogICAgDQogIDwvc2VjdGlvbj4gIA0KPC9jb21wb25lbnQ+DQoNCg0KDQo8IS0tDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KQEBDSElFRiBDT01QTEFJTlQgDQoNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+DQoNCjxjb21wb25lbnQ+DQogIDxzZWN0aW9uPg0KICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjIuMTMiLz4NCiAgICA8Y29kZSBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgY29kZT0iMTAxNTQtMyIgZGlzcGxheU5hbWU9IkNISUVGIENPTVBMQUlOVCIvPg0KICAgIDx0aXRsZT5DaGllZiBDb21wbGFpbnQ8L3RpdGxlPg0KICAgIDx0ZXh0Pg0KICAgICAgPHBhcmFncmFwaD5TaG9ydG5lc3Mgb2YgYnJlYXRoLCBmZXZlciwgYW5kIGNoZXN0IHBhaW4uPC9wYXJhZ3JhcGg+DQogICAgPC90ZXh0Pg0KICA8L3NlY3Rpb24+DQo8L2NvbXBvbmVudD4NCg0KDQoJCQkgICAgIA0KPCEtLQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KQEBESVNDSEFSR0UgRElFVA0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+DQo8Y29tcG9uZW50Pg0KICA8c2VjdGlvbj4NCiAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjMuMzMiLz4NCiAgICA8Y29kZSBjb2RlPSI0MjM0NC0yIiBkaXNwbGF5TmFtZT0iRElTQ0hBUkdFIERJRVQiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIi8+DQogICAgPHRpdGxlPkRpc2NoYXJnZSBEaWV0PC90aXRsZT4NCiAgICA8dGV4dD5Ob3JtYWwgZGlldC48L3RleHQ+DQogIDwvc2VjdGlvbj4NCjwvY29tcG9uZW50Pg0KCQkJDQoJCQkNCjwhLS0NCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCkBARlVOQ1RJT05BTCBTVEFUVVMNCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0tPg0KPGNvbXBvbmVudD4NCiAgPHNlY3Rpb24+DQogICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuMi4xNCIvPg0KICAgIDwhLS0gICoqKioqKioqIEZ1bmN0aW9uYWwgc3RhdHVzIHNlY3Rpb24gdGVtcGxhdGUgICAqKioqKioqKiAtLT4NCiAgICA8Y29kZSBjb2RlPSI0NzQyMC01IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiLz4NCiAgICA8dGl0bGU+RnVuY3Rpb25hbCBTdGF0dXM8L3RpdGxlPg0KICAgIDx0ZXh0Pg0KICAgICAgPHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjEwMCUiPg0KCTx0aGVhZD4NCgkgIDx0cj4NCgkgICAgPHRoPkZ1bmN0aW9uYWwgQ29uZGl0aW9uPC90aD4NCgkgICAgPHRoPkVmZmVjdGl2ZSBEYXRlczwvdGg+DQoJICAgIDx0aD5Db25kaXRpb24gU3RhdHVzPC90aD4NCgkgIDwvdHI+DQoJPC90aGVhZD4NCgk8dGJvZHk+DQoJICA8dHI+DQoJICAgIDx0ZD5UZW1wb3JhcnkgbG9zcyBvZiBtZW1vcnkgKGZpbmRpbmcpPC90ZD4NCgkgICAgPHRkPjIwMTc8L3RkPg0KCSAgICA8dGQ+QWN0aXZlPC90ZD4NCgkgIDwvdHI+DQoJPC90Ym9keT4NCiAgICAgIDwvdGFibGU+DQogICAgPC90ZXh0Pg0KDQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJPCEtLSBQcm9ibGVtIG9ic2VydmF0aW9uIHRlbXBsYXRlIC0tPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuNCIvPg0KCTxpZCByb290PSJhYjE3OTFiMC01YzcxLTExZGItYjBkZS0wODAwMjAwYzlhNjYiLz4NCgk8Y29kZSBjb2RlPSI0MDk1ODYwMDYiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJDb21wbGFpbnQiLz4NCgk8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgk8ZWZmZWN0aXZlVGltZT4NCgkgIDxsb3cgdmFsdWU9IjE5OTkxMCIvPg0KCTwvZWZmZWN0aXZlVGltZT4NCgk8dmFsdWUgeHNpOnR5cGU9IkNEIiBjb2RlPSIxNjIyMDAwMDkiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJUZW1wb3JhcnkgbG9zcyBvZiBtZW1vcnkiLz4NCgk8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlJFRlIiPg0KCSAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC42Ii8+DQoJICAgIDxjb2RlIGNvZGU9IjMzOTk5LTQiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iU3RhdHVzIi8+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8dmFsdWUgeHNpOnR5cGU9IkNEIiBjb2RlPSI1NTU2MTAwMyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIgZGlzcGxheU5hbWU9IkFjdGl2ZSIgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCIvPg0KCSAgPC9vYnNlcnZhdGlvbj4NCgk8L2VudHJ5UmVsYXRpb25zaGlwPg0KCTxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiIgaW52ZXJzaW9uSW5kPSJ0cnVlIj4NCgkgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMzEiLz4NCgkgICAgPCEtLSAgICBBZ2Ugb2JzZXJ2YXRpb24gdGVtcGxhdGUgICAtLT4NCgkgICAgPGNvZGUgY29kZT0iMzk3NjU5MDA4IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iQWdlIi8+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8dmFsdWUgeHNpOnR5cGU9IlBRIiB2YWx1ZT0iNTciIHVuaXQ9ImEiLz4NCgkgIDwvb2JzZXJ2YXRpb24+DQoJPC9lbnRyeVJlbGF0aW9uc2hpcD4JDQoJPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJSRUZSIj4NCgkgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuNSIvPg0KCSAgICA8IS0tIEhlYWx0aCBzdGF0dXMgb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+DQoJICAgIDxjb2RlIGNvZGU9IjExMzIzLTMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iSGVhbHRoIHN0YXR1cyIvPg0KCSAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgkgICAgPHZhbHVlIHhzaTp0eXBlPSJDRSIgY29kZT0iNDEzMzIyMDA5IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIiBkaXNwbGF5TmFtZT0iUmVzb2x2ZWQiLz4NCgkgIDwvb2JzZXJ2YXRpb24+DQoJPC9lbnRyeVJlbGF0aW9uc2hpcD4JDQogICAgICA8L29ic2VydmF0aW9uPg0KICAgIDwvZW50cnk+DQogICAgDQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yIi8+DQoJPGlkIHJvb3Q9IjEwN2MyZGMwLTY3YTUtMTFkYi1iZDEzLTA4MDAyMDBjOWE2NiIvPg0KCTxjb2RlIGNvZGU9IjMwMzEzLTEiIGRpc3BsYXlOYW1lPSJIR0IiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIj4NCgkgIDxvcmlnaW5hbFRleHQ+DQoJICAgIDxyZWZlcmVuY2UgdmFsdWU9IiNyZXN1bHQxIi8+DQoJICA8L29yaWdpbmFsVGV4dD4NCgk8L2NvZGU+DQoJPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+DQoJPGVmZmVjdGl2ZVRpbWUgdmFsdWU9IjIwMDAwMzIzMTQzMCIvPg0KCTx2YWx1ZSB4c2k6dHlwZT0iUFEiIHZhbHVlPSIxNC4wIiB1bml0PSJnL2RsIi8+DQoJPGludGVycHJldGF0aW9uQ29kZSBjb2RlPSJOIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjgzIi8+DQoJPG1ldGhvZENvZGUvPg0KCTx0YXJnZXRTaXRlQ29kZS8+DQoJPGF1dGhvcj4NCgkgIDx0aW1lLz4NCgkgIDxhc3NpZ25lZEF1dGhvcj4NCgkgICAgPGlkLz4NCgkgIDwvYXNzaWduZWRBdXRob3I+DQoJPC9hdXRob3I+DQoJPHJlZmVyZW5jZVJhbmdlPg0KCSAgPG9ic2VydmF0aW9uUmFuZ2U+DQoJICAgIDx0ZXh0Pk0gMTMtMTggZy9kbDsgRiAxMi0xNiBnL2RsPC90ZXh0Pg0KCSAgPC9vYnNlcnZhdGlvblJhbmdlPg0KCTwvcmVmZXJlbmNlUmFuZ2U+DQogICAgICA8L29ic2VydmF0aW9uPg0KICAgIDwvZW50cnk+DQogICAgDQogIDwvc2VjdGlvbj4NCjwvY29tcG9uZW50Pg0KCQkJDQoNCgkJCQkJCQ0KPCEtLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KQEBISVNUT1JZIFBBU1QgSUxMTkVTUw0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0tPg0KPGNvbXBvbmVudD4NCiAgPHNlY3Rpb24+DQogICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuMi4yMCIvPg0KICAgIDxjb2RlIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBjb2RlPSIxMTM0OC0wIiBkaXNwbGF5TmFtZT0iSElTVE9SWSBPRiBQQVNUIElMTE5FU1MiLz4NCiAgICA8dGl0bGU+SGlzdG9yeSBvZiBQYXN0IElsbG5lc3M8L3RpdGxlPg0KICAgIDx0ZXh0Pg0KICAgICAgPHBhcmFncmFwaD5IeXBlcnRlbnNpb24sIG1pbGQgdHlwZSAyIGRpYWJldGVzLCBhbmQgbWlsZCBDT1BELjwvcGFyYWdyYXBoPg0KICAgIDwvdGV4dD4NCiAgPC9zZWN0aW9uPg0KPC9jb21wb25lbnQ+DQoNCg0KPCEtLQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KQEBISVNUT1JZIFBSRVNFTlQgSUxMTkVTUw0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+DQoNCjxjb21wb25lbnQ+DQogIDxzZWN0aW9uPg0KICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMy40Ii8+DQogICAgPGNvZGUgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGU9IjEwMTY0LTIiIGRpc3BsYXlOYW1lPSJISVNUT1JZIE9GIFBSRVNFTlQgSUxMTkVTUyIvPg0KICAgIDx0aXRsZT5IaXN0b3J5IG9mIFByZXNlbnQgSWxsbmVzczwvdGl0bGU+DQogICAgPHRleHQ+DQogICAgICA8cGFyYWdyYXBoPlRoZSBwYXRpZW50IGZpcnN0IGRldmVsb3BlZCBhIGxvdyBncmFkZSBmZXZlciA0IGRheXMgYWdvLCBmb2xsb3dlZCBieSBpbmNyZWFzaW5nIGZhdGlndWUsIGNvdWdoIGFuZCBhY2hpbmcgaW4gaGlzIGNoZXN0LiA8L3BhcmFncmFwaD4NCiAgICAgIDxwYXJhZ3JhcGg+SGUgd2FzIHNlZW4gaW5pdGlhbGx5IGluIHRoZSBFUiAyIGRheXMgYWdvIGFuZCBzdGFydGVkIG9uIFByb3ZlbnRpbCAoQWxidXRlcm9sIFN1bGZhdGUpLiA8L3BhcmFncmFwaD4NCiAgICAgIDxwYXJhZ3JhcGg+VG9kYXkgaGlzIGZldmVyIGluY3JlYXNlZCB0byAxMDIgZGVncmVlcyBhbmQgaGUgYmVjYW1lIGluY3JlYXNpbmdseSBjb25mdXNlZC48L3BhcmFncmFwaD4NCiAgICAgIDxwYXJhZ3JhcGg+SGlzIGZhbWlseSBiZWxpZXZlcyBoZSBoYXMgbWlsZCBDT1BEIGR1ZSB0byBoaXMgc21va2luZywgYnV0IGhhcyBuZXZlciBiZWVuIGhvc3BpdGFsaXplZCBmb3IgcmVzcGlyYXRvcnkgcHJvYmxlbXMgYmVmb3JlLjwvcGFyYWdyYXBoPg0KICAgICAgPHBhcmFncmFwaD5Ub2RheSwgdGhlIHBhdGllbnQgcHJlc2VudHMgaGltc2VsZiBpbiBzZXZlcmUgcmVzcGlyYXRvcnkgZGlzdHJlc3MsIHdpdGggZmF0aWd1ZSBhbmQgc2lnbmlmaWNhbnQgY29uZnVzaW9uLjwvcGFyYWdyYXBoPg0KICAgICAgPHBhcmFncmFwaD5IZSBoYXMgZGV2ZWxvcGVkIG1pbGQgaHlwZXJ0ZW5zaW9uIHdpdGggYSBCUCBvZiAxNjAvMTAwLCBidXQgbm8gc2lnbnMgb2Ygc3Ryb2tlIG9yIG1vdG9yIGltcGFpcm1lbnQuPC9wYXJhZ3JhcGg+DQogICAgICA8cGFyYWdyYXBoPk1vcmUgY29tcGxldGUgaGlzdG9yeSBjYW5ub3QgYmUgdGFrZW4gYmVjYXVzZSBvZiB0aGUgcGF0aWVudOKAmXMgY29uZnVzaW9uLjwvcGFyYWdyYXBoPg0KDQogICAgICA8cGFyYWdyYXBoPg0KCVZJVEFMIFNJR05TOiBUZW1wZXJhdHVyZSAxMDMuOCBkZWdyZWVzLiBQdWxzZSAxMjguIFJlc3BpcmF0aW9ucyA0OC4gQmxvb2QgcHJlc3N1cmUgMTU2LzEwMC4gSW5pdGlhbCBveHlnZW4gc2F0dXJhdGlvbnMgb24gcm9vbSBhaXIgYXJlIDk0Lg0KICAgICAgPC9wYXJhZ3JhcGg+DQoNCiAgICAgIDxwYXJhZ3JhcGg+DQoJR0VORVJBTDogUmV2ZWFscyBhIHZlcnkgYW54aW91cywgZXhoYXVzdGVkLWFwcGVhcmluZyBtYWxlIHdpdGggbGFib3JlZCBicmVhdGhpbmcuDQogICAgICA8L3BhcmFncmFwaD4NCg0KICAgICAgPHBhcmFncmFwaD4NCglIRUVOVDogSGVhZCBpcyBub3Jtb2NlcGhhbGljIGFuZCBhdHJhdW1hdGljLg0KICAgICAgPC9wYXJhZ3JhcGg+DQoNCiAgICAgIDxwYXJhZ3JhcGg+DQoJTkVDSzogVGhlIG5lY2sgaXMgc3VwcGxlIHdpdGggc2lnbmlmaWNhbnQgSlZEIGp1Z3VsYXIgdmVub3VzIGRpc3RlbnRpb24uDQogICAgICA8L3BhcmFncmFwaD4NCg0KICAgICAgPHBhcmFncmFwaD4NCglMVU5HUzogQXVzY3VsdGF0aW9uIG9mIHRoZSBjaGVzdCByZXZlYWxzIHZlcnkgZGlzdGFudCBhbmQgZmFpbnQgYnJlYXRoIHNvdW5kcywgYmlsYXRlcmFsbHksIHdpdGggY29hcnNlIHJhbGVzIHRocm91Z2hvdXQgdGhlIHJpZ2h0IGx1bmcuIFBlcmN1c3Npb24gc3VnZ2VzdHMgYSBzaWduaWZpY2FudCBlZmZ1c2lvbiBvbiB0aGUgcmlnaHQuDQogICAgICA8L3BhcmFncmFwaD4NCg0KICAgICAgPHBhcmFncmFwaD4NCglIRUFSVDogQ2FyZGlhYyBleGFtaW5hdGlvbiByZXZlYWxzIHNpbnVzIHRhY2h5Y2FyZGlhLCB3aXRob3V0IHByb25vdW5jZWQgbXVybXVyLg0KICAgICAgPC9wYXJhZ3JhcGg+DQoNCiAgICAgIDxwYXJhZ3JhcGg+DQoJQUJET01FTjogU29mdCB0byBwYWxwYXRpb24sIG5vIG9yZ2Fub21lZ2FseS4gRXh0cmVtaXRpZXM6IFdpdGggMSsgZWRlbWEuDQogICAgICA8L3BhcmFncmFwaD4NCg0KICAgIDwvdGV4dD4NCiAgPC9zZWN0aW9uPg0KPC9jb21wb25lbnQ+DQoJCQkNCg0KCQkJCSAgIA0KDQo8IS0tDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpAQEhPU1BJVEFMIERJU0NIQVJHRSBQSFlTSUNBTCAgDQoNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotLT4NCg0KPGNvbXBvbmVudD4NCiAgPHNlY3Rpb24+DQogICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS4zLjI2Ii8+DQogICAgPGNvZGUgY29kZT0iMTAxODQtMCIgZGlzcGxheU5hbWU9IkhPU1BJVEFMIERJU0NIQVJHRSBQSFlTSUNBTCBGSU5ESU5HUyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiLz4NCiAgICA8dGl0bGU+SG9zcGl0YWwgRGlzY2hhcmdlIFBoeXNpY2FsPC90aXRsZT4NCiAgICANCiAgICA8dGV4dD4JCQkJCQ0KICAgICAgVklUQUwgU0lHTlM6IFRlbXBlcmF0dXJlIDEwMy44IGRlZ3JlZXMuIFB1bHNlIDEyOC4gUmVzcGlyYXRpb25zIDQ4LiBCbG9vZCBwcmVzc3VyZSAxNTYvMTAwLiBJbml0aWFsIG94eWdlbiBzYXR1cmF0aW9ucyBvbiByb29tIGFpciBhcmUgOTQuIDxici8+PGJyLz4NCg0KICAgICAgR0VORVJBTDogUmV2ZWFscyBhIHZlcnkgYW54aW91cywgZXhoYXVzdGVkLWFwcGVhcmluZyBtYWxlIHdpdGggbGFib3JlZCBicmVhdGhpbmcuIDxici8+PGJyLz4JCQkJCSAgDQogICAgICANCiAgICAgIEhFRU5UOiBIZWFkIGlzIG5vcm1vY2VwaGFsaWMgYW5kIGF0cmF1bWF0aWMuIDxici8+PGJyLz4NCiAgICAgIA0KICAgICAgTkVDSzogVGhlIG5lY2sgaXMgc3VwcGxlIHdpdGggc2lnbmlmaWNhbnQgSlZEIGp1Z3VsYXIgdmVub3VzIGRpc3RlbnRpb24uIDxici8+PGJyLz4NCiAgICAgIA0KICAgICAgTFVOR1M6IEF1c2N1bHRhdGlvbiBvZiB0aGUgY2hlc3QgcmV2ZWFscyB2ZXJ5IGRpc3RhbnQgYW5kIGZhaW50IGJyZWF0aCBzb3VuZHMsIGJpbGF0ZXJhbGx5LCB3aXRoIGNvYXJzZSByYWxlcyB0aHJvdWdob3V0IHRoZSByaWdodCBsdW5nLiBQZXJjdXNzaW9uIHN1Z2dlc3RzIGEgc2lnbmlmaWNhbnQgZWZmdXNpb24gb24gdGhlIHJpZ2h0LiA8YnIvPjxici8+DQogICAgICANCiAgICAgIEhFQVJUOiBDYXJkaWFjIGV4YW1pbmF0aW9uIHJldmVhbHMgc2ludXMgdGFjaHljYXJkaWEsIHdpdGhvdXQgcHJvbm91bmNlZCBtdXJtdXIuIDxici8+PGJyLz4NCiAgICAgIA0KICAgICAgQUJET01FTjogU29mdCB0byBwYWxwYXRpb24sIG5vIG9yZ2Fub21lZ2FseS4gPGJyLz48YnIvPg0KICAgICAgDQogICAgICBFeHRyZW1pdGllczogV2l0aCAxKyBlZGVtYS4gPGJyLz48YnIvPg0KICAgIDwvdGV4dD4NCiAgICANCiAgPC9zZWN0aW9uPg0KPC9jb21wb25lbnQ+DQoJCQkNCg0KPCEtLQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KQEBIT1NQSVRBTCBESVNDSEFSR0UgU1RVRElFUyBTVU1NQVJZIA0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+DQo8Y29tcG9uZW50Pg0KICA8c2VjdGlvbj4NCiAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi4yLjE2Ii8+DQogICAgPGNvZGUgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGU9IjExNDkzLTQiIGRpc3BsYXlOYW1lPSJIT1NQSVRBTCBESVNDSEFSR0UgU1RVRElFUyBTVU1NQVJZIi8+DQogICAgPHRpdGxlPkhvc3BpdGFsIERpc2NoYXJnZSBTdHVkaWVzIFN1bW1hcnk8L3RpdGxlPg0KICAgIDx0ZXh0Pg0KICAgICAgPHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjEwMCUiPg0KCTx0aGVhZD4NCgkgIDx0cj4NCgkgICAgPHRoPkxhYm9yYXRvcnkgSW5mb3JtYXRpb248L3RoPg0KCSAgICA8dGg+Q2hlbWlzdHJpZXMgYW5kIGRydWcgbGV2ZWxzPC90aD4NCgkgIDwvdHI+DQoJPC90aGVhZD4NCgk8dGJvZHk+DQoJICA8dHI+DQoJICAgIDx0ZD5XaGl0ZSBCbG9vZCBDb3VudDwvdGQ+DQoJICAgIDx0ZD4xNS41PC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5IZW1vZ2xvYmluPC90ZD4NCgkgICAgPHRkPjE0PC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5IZW1hdG9jcml0PC90ZD4NCgkgICAgPHRkPjQyLjQ8L3RkPg0KCSAgPC90cj4NCgkgIDx0cj4NCgkgICAgPHRkPlBvbHlzPC90ZD4NCgkgICAgPHRkPjg5PC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5MeW1waG9jeXRlczwvdGQ+DQoJICAgIDx0ZD40PC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5Tb2RpdW08L3RkPg0KCSAgICA8dGQ+MTI0PC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5DaGxvcmlkZTwvdGQ+DQoJICAgIDx0ZD44MTwvdGQ+DQoJICA8L3RyPg0KCSAgPHRyPg0KCSAgICA8dGQ+Q08yPC90ZD4NCgkgICAgPHRkPjQ0PC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5CVU48L3RkPg0KCSAgICA8dGQ+NjwvdGQ+DQoJICA8L3RyPg0KCSAgPHRyPg0KCSAgICA8dGQ+Q3JlYXRpbmluZTwvdGQ+DQoJICAgIDx0ZD4wLjc8L3RkPg0KCSAgPC90cj4NCgkgIDx0cj4NCgkgICAgPHRkPkdsdWNvc2U8L3RkPg0KCSAgICA8dGQ+MTgyPC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5BbGJ1bWluPC90ZD4NCgkgICAgPHRkPjMuMzwvdGQ+DQoJICA8L3RyPg0KCSAgPHRyPg0KCSAgICA8dGQ+R2xvYnVsaW48L3RkPg0KCSAgICA8dGQ+NC4xPC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5Ucm9wb25pbjwvdGQ+DQoJICAgIDx0ZD4wLjExPC90ZD4NCgkgIDwvdHI+DQoJPC90Ym9keT4NCiAgICAgIDwvdGFibGU+DQogICAgICA8YnIvPg0KICAgICAgPHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjEwMCUiPg0KCTx0aGVhZD4NCgkgIDx0cj4NCgkgICAgPHRoPk90aGVyIFRlc3RzPC90aD4NCgkgICAgPHRoPlJlc3VsdHM8L3RoPg0KCSAgPC90cj4NCgk8L3RoZWFkPg0KCTx0Ym9keT4NCgkgIDx0cj4NCgkgICAgPHRkPkVLRzwvdGQ+DQoJICAgIDx0ZD5zaW51cyB0YWNoeWNhcmRpYSBhbmQgMi0zIFBWQ3MgcGVyIG1pbnV0ZSwgYnV0IG5vIGV2aWRlbmNlIG9mIGFjdXRlIGlzY2hlbWlhLjwvdGQ+DQoJICA8L3RyPg0KCSAgPHRyPg0KCSAgICA8dGQ+Q2hlc3QgeC1yYXk8L3RkPg0KCSAgICA8dGQ+c3Vib3B0aW1hbCBpbiBxdWFsaXR5LCB3aXRoIGFuIGluZmlsdHJhdGVzIGluIHRoZSByaWdodCBtaWRkbGUgYW5kIGxvd2VyIGxvYmUsIGEgcmlnaHQgcGxldXJhbCBlZmZ1c2lvbiwgYW5kICBubyBwbmV1bW90aG9yYXguPC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD5VcmluYWx5c2lzPC90ZD4NCgkgICAgPHRkPnllbGxvdyBjbGVhciB1cmluZS4gU3BlY2lmaWMgZ3Jhdml0eSBncmVhdGVyIHRoYW4gMS4wMzAgd2l0aCAyKyBrZXRvbmVzLCAxKyBibG9vZCBhbmQgMysgcHJvdGVpbi4gTm8gd2hpdGUgY2VsbHMgYW5kIDAtMiByZWQgY2VsbHMuPC90ZD4NCgkgIDwvdHI+DQoJPC90Ym9keT4NCiAgICAgIDwvdGFibGU+DQogICAgPC90ZXh0Pg0KICA8L3NlY3Rpb24+DQo8L2NvbXBvbmVudD4NCg0KDQo8IS0tDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpAQEhJU1RPUlkgT0YgSU1NVU5JQ0FUSU9OUyANCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0tPg0KPGNvbXBvbmVudD4NCiAgPHNlY3Rpb24+DQogICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuMi4yIi8+DQogICAgPCEtLSAgKioqKioqKiogIEltbXVuaXphdGlvbnMgc2VjdGlvbiB0ZW1wbGF0ZSAgICoqKioqKioqIC0tPg0KICAgIDxjb2RlIGNvZGU9IjExMzY5LTYiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iSGlzdG9yeSBvZiBpbW11bml6YXRpb25zIi8+DQogICAgPHRpdGxlPkhpc3Rvcnkgb2YgSW1tdW5pemF0aW9uczwvdGl0bGU+DQogICAgPHRleHQ+ICAgICAgDQogICAgICA8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0iMTAwJSI+DQoJPHRoZWFkPg0KCSAgPHRyPg0KCSAgICA8dGg+VmFjY2luZTwvdGg+DQoJICAgIDx0aD5EYXRlPC90aD4NCgkgICAgPHRoPlN0YXR1czwvdGg+DQoJICA8L3RyPg0KCTwvdGhlYWQ+DQoJPHRib2R5Pg0KCSAgPHRyPg0KCSAgICA8dGQ+DQoJICAgIDxjb250ZW50IElEPSJpbW11bjEiLz5JbmZsdWVuemEgdmlydXMgdmFjY2luZSwgSU08L3RkPg0KCSAgICA8dGQ+Tm92IDIwMTY8L3RkPg0KCSAgICA8dGQ+Q29tcGxldGVkPC90ZD4NCgkgIDwvdHI+DQoJPC90Ym9keT4NCiAgICAgIDwvdGFibGU+ICAgICAgDQogICAgPC90ZXh0Pg0KICAgIA0KICAgIDxlbnRyeSB0eXBlQ29kZT0iRFJJViI+DQogICAgICA8c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24gY2xhc3NDb2RlPSJTQkFETSIgbW9vZENvZGU9IkVWTiIgbmVnYXRpb25JbmQ9ImZhbHNlIj4NCgk8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjUyIi8+DQoJPGlkIHJvb3Q9ImU2ZjFiYTQzLWMwZWQtNGI5Yi05ZjEyLWY0MzVkOGFkOGY5MiIvPg0KCTx0ZXh0Pg0KCSAgPHJlZmVyZW5jZSB2YWx1ZT0iI2ltbXVuMSIvPg0KCTwvdGV4dD4NCgk8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgk8ZWZmZWN0aXZlVGltZSB4c2k6dHlwZT0iSVZMX1RTIiB2YWx1ZT0iMTk5OTExIi8+DQoJPHJvdXRlQ29kZSBjb2RlPSJJTSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNS4xMTIiIGNvZGVTeXN0ZW1OYW1lPSJSb3V0ZU9mQWRtaW5pc3RyYXRpb24iIGRpc3BsYXlOYW1lPSJJbnRyYW11c2N1bGFyIGluamVjdGlvbiIvPg0KCTxkb3NlUXVhbnRpdHkgbnVsbEZsYXZvcj0iVU5LIi8+DQoJPGNvbnN1bWFibGU+DQoJICA8bWFudWZhY3R1cmVkUHJvZHVjdD4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC41NCIvPg0KCSAgICA8bWFudWZhY3R1cmVkTWF0ZXJpYWw+DQoJICAgICAgPGNvZGUgY29kZT0iODgiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuNTkiIGRpc3BsYXlOYW1lPSJJbmZsdWVuemEgdmlydXMgdmFjY2luZSIgY29kZVN5c3RlbU5hbWU9IkNWWCI+DQoJCTxvcmlnaW5hbFRleHQ+SW5mbHVlbnphIHZpcnVzIHZhY2NpbmU8L29yaWdpbmFsVGV4dD4NCgkJPHRyYW5zbGF0aW9uIGNvZGU9IjExMSIgZGlzcGxheU5hbWU9ImluZmx1ZW56YSwgbGl2ZSwgaW50cmFuYXNhbCIgY29kZVN5c3RlbU5hbWU9IkNWWCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi41OSIvPg0KCSAgICAgIDwvY29kZT4NCgkgICAgPC9tYW51ZmFjdHVyZWRNYXRlcmlhbD4NCgkgIDwvbWFudWZhY3R1cmVkUHJvZHVjdD4NCgk8L2NvbnN1bWFibGU+DQoJPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4NCgkgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJJTlQiPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjIwIi8+DQoJICAgIDxjb2RlIGNvZGU9IjE3MTA0NDAwMyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIgZGlzcGxheU5hbWU9ImltbXVuaXphdGlvbiBlZHVjYXRpb24iLz4NCgkgICAgPHRleHQ+UG9zc2libGUgZmx1LWxpa2Ugc3ltcHRvbXMgZm9yIHRocmVlIGRheXMuPC90ZXh0Pg0KCSAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgkgIDwvYWN0Pg0KCTwvZW50cnlSZWxhdGlvbnNoaXA+DQogICAgICA8L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uPg0KICAgIDwvZW50cnk+DQogICAgDQogIDwvc2VjdGlvbj4NCjwvY29tcG9uZW50Pg0KDQoNCgkJCQ0KPCEtLQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KQEBQUk9CTEVNIExJU1QNCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0tPg0KPGNvbXBvbmVudD4NCiAgPHNlY3Rpb24+DQogICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuMi41LjEiIGV4dGVuc2lvbj0iMjAxNS0wOC0wMSIvPg0KICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjIuNS4xIi8+DQogICAgPGNvZGUgY29kZT0iMTE0NTAtNCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJQUk9CTEVNIExJU1QiLz4NCiAgICA8dGl0bGU+UHJvYmxlbXM8L3RpdGxlPg0KICAgIDx0ZXh0Pg0KICAgICAgPHBhcmFncmFwaD5BY3RpdmUgQ29uY2VybnM8L3BhcmFncmFwaD4NCiAgICAgIDxsaXN0Pg0KCQ0KCTxpdGVtPlByb2JsZW0gIzENCgk8bGlzdD4NCgkgIDxpdGVtPlBuZXVtb25pYTwvaXRlbT4NCgk8L2xpc3Q+DQoJPC9pdGVtPg0KDQoJPGl0ZW0+UHJvYmxlbSAjMg0KCTxsaXN0Pg0KCSAgPGl0ZW0+U2Vwc2lzPC9pdGVtPg0KCTwvbGlzdD4NCgk8L2l0ZW0+DQoNCgk8aXRlbT5Qcm9ibGVtICMzDQoJPGxpc3Q+DQoJICA8aXRlbT5NZXRoaWNpbGxpbiByZXNpc3RhbnQgU3RhcGh5bG9jb2NjdXMgYXVyZXVzIChNUlNBKTwvaXRlbT4NCgk8L2xpc3Q+DQoJPC9pdGVtPg0KCQ0KCTxpdGVtPlByb2JsZW0gIzMNCgk8bGlzdD4NCgkgIDxpdGVtPkNocm9uaWMgb2JzdHJ1Y3RpdmUgbHVuZyBkaXNlYXNlPC9pdGVtPg0KCTwvbGlzdD4NCgk8L2l0ZW0+DQoNCg0KCTxpdGVtPlByb2JsZW0gIzQNCgk8bGlzdD4NCgkgIDxpdGVtPkNvbmdlc3RpdmUgSGVhcnQgRmFpbHVyZSAoQ0hGKTwvaXRlbT4NCgk8L2xpc3Q+DQoJPC9pdGVtPg0KCQ0KCTxpdGVtPlByb2JsZW0gIzUNCgk8bGlzdD4NCgkgIDxpdGVtPkh5cGVydGVuc2lvbjwvaXRlbT4NCgk8L2xpc3Q+DQoJPC9pdGVtPg0KDQoJPGl0ZW0+UHJvYmxlbSAjNg0KCTxsaXN0Pg0KCSAgPGl0ZW0+RGlhYmV0ZXMgTWVsbGl0dXMgVHlwZSAyPC9pdGVtPg0KCTwvbGlzdD4NCgk8L2l0ZW0+DQoJDQogICAgICA8L2xpc3Q+DQogICAgPC90ZXh0Pg0KDQogICAgPCEtLSBAUHJvYmxlbUxpc3QgUG5ldW1vbmlhIC0tPiAJCQkJCQ0KICAgIDxlbnRyeSB0eXBlQ29kZT0iRFJJViI+DQogICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4NCgk8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjMiIGV4dGVuc2lvbj0iMjAxNS0wOC0wMSIgLz4NCgk8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjMiIC8+DQoJPGlkIHJvb3Q9ImVjOGE2ZmY4LWVkNGItNGY3ZS04MmMzLWU5OGU1OGI0NWRlOCIgLz4NCgk8Y29kZSBjb2RlPSJDT05DIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjYiIGRpc3BsYXlOYW1lPSJDb25jZXJuIiAvPg0KCTxzdGF0dXNDb2RlIGNvZGU9ImFjdGl2ZSIvPg0KCTxlZmZlY3RpdmVUaW1lPg0KCSAgPGxvdyB2YWx1ZT0iMjAwNjEyMzEiLz4NCgk8L2VmZmVjdGl2ZVRpbWU+DQoJPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4NCgkgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuNCIgZXh0ZW5zaW9uPSIyMDE1LTA4LTAxIi8+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuNCIvPg0KCSAgICA8aWQgcm9vdD0iYWIxNzkxYjAtNWM3MS0xMWRiLWIwZGUtMDgwMDIwMGM5YTY4Ii8+DQoJICAgIDxjb2RlIGNvZGU9IjY0NTcyMDAxIiBkaXNwbGF5TmFtZT0iQ29uZGl0aW9uIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVELUNUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ij4NCgkgICAgICA8dHJhbnNsYXRpb24gY29kZT0iNzUzMjMtNiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJDb25kaXRpb24iLz4NCgkgICAgPC9jb2RlPg0KCSAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgkgICAgPGVmZmVjdGl2ZVRpbWU+DQoJICAgICAgPGxvdyB2YWx1ZT0iMjAwNjEyMzEiLz4NCgkgICAgPC9lZmZlY3RpdmVUaW1lPg0KCSAgICA8dmFsdWUgeHNpOnR5cGU9IkNEIiBjb2RlPSI2MDQwMDciIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJQbmV1bW9uaWEiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiLz4NCgkgIDwvb2JzZXJ2YXRpb24+DQoJPC9lbnRyeVJlbGF0aW9uc2hpcD4NCiAgICAgIDwvYWN0Pg0KICAgIDwvZW50cnk+DQogICAgDQoNCiAgICA8IS0tIEBQcm9ibGVtTGlzdCBDSEYgQ29uZ2VzdGl2ZSBIZWFydCBGYWlsdXJlICAtLT4gDQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMyIgZXh0ZW5zaW9uPSIyMDE1LTA4LTAxIiAvPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMyIgLz4NCgk8aWQgcm9vdD0iZWM4YTZmZjgtZWQ0Yi00ZjdlLTgyYzMtZTk4ZTU4YjQ1ZGU3IiAvPg0KCTxjb2RlIGNvZGU9IkNPTkMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuNiIgZGlzcGxheU5hbWU9IkNvbmNlcm4iIC8+DQoJPHN0YXR1c0NvZGUgY29kZT0iYWN0aXZlIi8+DQoJPGVmZmVjdGl2ZVRpbWU+DQoJICA8bG93IHZhbHVlPSIyMDE3MDEwMSIvPg0KCTwvZWZmZWN0aXZlVGltZT4NCgk8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiPg0KCSAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC40IiBleHRlbnNpb249IjIwMTUtMDgtMDEiLz4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC40Ii8+DQoJICAgIDxpZCByb290PSJhYjE3OTFiMC01YzcxLTExZGItYjBkZS0wODAwMjAwYzlhNjYiLz4NCgkgICAgPGNvZGUgY29kZT0iNjQ1NzIwMDEiIGRpc3BsYXlOYW1lPSJDb25kaXRpb24iIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiPg0KCSAgICAgIDx0cmFuc2xhdGlvbiBjb2RlPSI3NTMyMy02IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkNvbmRpdGlvbiIvPg0KCSAgICA8L2NvZGU+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8ZWZmZWN0aXZlVGltZT4NCgkgICAgICA8bG93IHZhbHVlPSIyMDExMTAwNSIvPg0KCSAgICA8L2VmZmVjdGl2ZVRpbWU+DQoJICAgIDx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGNvZGU9IjQyMzQzMDA3IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iQ29uZ2VzdGl2ZSBIZWFydCBGYWlsdXJlKENIRikiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiLz4NCgkgIDwvb2JzZXJ2YXRpb24+DQoJPC9lbnRyeVJlbGF0aW9uc2hpcD4NCiAgICAgIDwvYWN0Pg0KICAgIDwvZW50cnk+DQoNCg0KICAgIDwhLS0gQFByb2JsZW1MaXN0IEVzc2VudGlhbCBIeXBlcnRlbnNpb24gIC0tPiANCiAgICA8ZW50cnkgdHlwZUNvZGU9IkRSSVYiPg0KICAgICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4zIiBleHRlbnNpb249IjIwMTUtMDgtMDEiIC8+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4zIiAvPg0KCTxpZCByb290PSJlYzhhNmZmOC1lZDRiLTRmN2UtODJjMy1lOThlNThiNDVkZTciIC8+DQoJPGNvZGUgY29kZT0iQ09OQyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNS42IiBkaXNwbGF5TmFtZT0iQ29uY2VybiIgLz4NCgk8c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUiLz4NCgk8ZWZmZWN0aXZlVGltZT4NCgkgIDxsb3cgdmFsdWU9IjIwMTExMDA1Ii8+DQoJPC9lZmZlY3RpdmVUaW1lPg0KCTxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+DQoJICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjQiIGV4dGVuc2lvbj0iMjAxNS0wOC0wMSIvPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjQiLz4NCgkgICAgPGlkIHJvb3Q9ImFiMTc5MWIwLTVjNzEtMTFkYi1iMGRlLTA4MDAyMDBjOWE2NiIvPg0KCSAgICA8Y29kZSBjb2RlPSI2NDU3MjAwMSIgZGlzcGxheU5hbWU9IkNvbmRpdGlvbiIgY29kZVN5c3RlbU5hbWU9IlNOT01FRC1DVCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiI+DQoJICAgICAgPHRyYW5zbGF0aW9uIGNvZGU9Ijc1MzIzLTYiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iQ29uZGl0aW9uIi8+DQoJICAgIDwvY29kZT4NCgkgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+DQoJICAgIDxlZmZlY3RpdmVUaW1lPg0KCSAgICAgIDxsb3cgdmFsdWU9IjIwMTExMDA1Ii8+DQoJICAgIDwvZWZmZWN0aXZlVGltZT4NCgkgICAgPHZhbHVlIHhzaTp0eXBlPSJDRCIgY29kZT0iNTk2MjEwMDAiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJFc3NlbnRpYWwgaHlwZXJ0ZW5zaW9uIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVELUNUIi8+DQoJICA8L29ic2VydmF0aW9uPg0KCTwvZW50cnlSZWxhdGlvbnNoaXA+DQogICAgICA8L2FjdD4NCiAgICA8L2VudHJ5Pg0KICAgIA0KDQogICAgPCEtLSBAUHJvYmxlbUxpc3QgTVJTQSAtLT4gDQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMyIgZXh0ZW5zaW9uPSIyMDE1LTA4LTAxIiAvPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMyIgLz4NCgk8aWQgcm9vdD0iZWM4YTZmZjgtZWQ0Yi00ZjdlLTgyYzMtZTk4ZTU4YjQ1ZGU5IiAvPg0KCTxjb2RlIGNvZGU9IkNPTkMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuNiIgZGlzcGxheU5hbWU9IkNvbmNlcm4iIC8+DQoJPHN0YXR1c0NvZGUgY29kZT0iYWN0aXZlIi8+DQoJPGVmZmVjdGl2ZVRpbWU+DQoJICA8bG93IHZhbHVlPSIyMDExMTIzMSIvPg0KCTwvZWZmZWN0aXZlVGltZT4NCgk8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiPg0KCSAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC40IiBleHRlbnNpb249IjIwMTUtMDgtMDEiLz4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC40Ii8+DQoJICAgIDxpZCByb290PSJhYjE3OTFiMC01YzcxLTExZGItYjBkZS0wODAwMjAwYzlhNjkiLz4NCgkgICAgPGNvZGUgY29kZT0iNjQ1NzIwMDEiIGRpc3BsYXlOYW1lPSJDb25kaXRpb24iIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiPg0KCSAgICAgIDx0cmFuc2xhdGlvbiBjb2RlPSI3NTMyMy02IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkNvbmRpdGlvbiIvPg0KCSAgICA8L2NvZGU+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8ZWZmZWN0aXZlVGltZT4NCgkgICAgICA8bG93IHZhbHVlPSIyMDExMTIzMSIvPg0KCSAgICA8L2VmZmVjdGl2ZVRpbWU+DQoJICAgIDx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGNvZGU9IjExNTMyOTAwMSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIgZGlzcGxheU5hbWU9Ik1ldGhpY2lsbGluIHJlc2lzdGFudCBTdGFwaHlsb2NvY2N1cyBhdXJldXMgKE1SU0EpIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVELUNUIi8+DQoJICA8L29ic2VydmF0aW9uPg0KCTwvZW50cnlSZWxhdGlvbnNoaXA+DQogICAgICA8L2FjdD4NCiAgICA8L2VudHJ5Pg0KICAgIA0KICAgIDwhLS0gQFByb2JsZW1MaXN0IEZldmVyIC0tPiANCiAgICA8ZW50cnkgdHlwZUNvZGU9IkRSSVYiPg0KICAgICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4zIiBleHRlbnNpb249IjIwMTUtMDgtMDEiIC8+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4zIiAvPg0KCTxpZCByb290PSJlYzhhNmZmOC1lZDRiLTRmN2UtODJjMy1lOThlNThiNDVkZjkiIC8+DQoJPGNvZGUgY29kZT0iQ09OQyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNS42IiBkaXNwbGF5TmFtZT0iQ29uY2VybiIgLz4NCgk8c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUiLz4NCgk8ZWZmZWN0aXZlVGltZT4NCgkgIDxsb3cgdmFsdWU9IjIwMTcwMTAxIi8+DQoJPC9lZmZlY3RpdmVUaW1lPg0KCTxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+DQoJICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjQiIGV4dGVuc2lvbj0iMjAxNS0wOC0wMSIvPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjQiLz4NCgkgICAgPGlkIHJvb3Q9ImFiMTc5MWIwLTVjNzEtMTFkYi1iMGRlLTA4MDAyMDBjOWE3OSIvPg0KCSAgICA8Y29kZSBjb2RlPSIyOTMwOCIgZGlzcGxheU5hbWU9IkRpYWdub3NpcyIgY29kZVN5c3RlbU5hbWU9IlNOT01FRC1DVCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiI+DQoJICAgICAgPHRyYW5zbGF0aW9uIGNvZGU9IjI5MzA4LTQiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iRGlhZ25vc2lzIi8+DQoJICAgIDwvY29kZT4NCgkgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+DQoJICAgIDxlZmZlY3RpdmVUaW1lPg0KCSAgICAgIDxsb3cgdmFsdWU9IjIwMTcwMTAxIi8+DQoJICAgIDwvZWZmZWN0aXZlVGltZT4NCgkgICAgPHZhbHVlIHhzaTp0eXBlPSJDRCIgY29kZT0iMzg2NjYxMDA2IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iRmV2ZXIiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiLz4NCgkgIDwvb2JzZXJ2YXRpb24+DQoJPC9lbnRyeVJlbGF0aW9uc2hpcD4NCiAgICAgIDwvYWN0Pg0KICAgIDwvZW50cnk+DQoNCiAgICA8IS0tIEBQcm9ibGVtTGlzdCBEaWFiZXRlcyBNZWxsaXR1cyBUeXBlIDIgLS0+IA0KICAgIDxlbnRyeSB0eXBlQ29kZT0iRFJJViI+DQogICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4NCgk8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjMiIGV4dGVuc2lvbj0iMjAxNS0wOC0wMSIgLz4NCgk8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjMiIC8+DQoJPGlkIHJvb3Q9ImVjOGE2ZmY4LWVkNGItNGY3ZS04MmMzLWU5OGU1OGI0NWRmOSIgLz4NCgk8Y29kZSBjb2RlPSJDT05DIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjYiIGRpc3BsYXlOYW1lPSJDb25jZXJuIiAvPg0KCTxzdGF0dXNDb2RlIGNvZGU9ImFjdGl2ZSIvPg0KCTxlZmZlY3RpdmVUaW1lPg0KCSAgPGxvdyB2YWx1ZT0iMjAxNzAxMDEiLz4NCgk8L2VmZmVjdGl2ZVRpbWU+DQoJPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4NCgkgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuNCIgZXh0ZW5zaW9uPSIyMDE1LTA4LTAxIi8+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuNCIvPg0KCSAgICA8aWQgcm9vdD0iYWIxNzkxYjAtNWM3MS0xMWRiLWIwZGUtMDgwMDIwMGM5YTc5Ii8+DQoJICAgIDxjb2RlIGNvZGU9IjI5MzA4IiBkaXNwbGF5TmFtZT0iRGlhZ25vc2lzIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVELUNUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ij4NCgkgICAgICA8dHJhbnNsYXRpb24gY29kZT0iMjkzMDgtNCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJEaWFnbm9zaXMiLz4NCgkgICAgPC9jb2RlPg0KCSAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgkgICAgPGVmZmVjdGl2ZVRpbWU+DQoJICAgICAgPGxvdyB2YWx1ZT0iMjAxNzAxMDEiLz4NCgkgICAgPC9lZmZlY3RpdmVUaW1lPg0KCSAgICA8dmFsdWUgeHNpOnR5cGU9IkNEIiBjb2RlPSI0NDA1NDAwNiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIgZGlzcGxheU5hbWU9IkRpYWJldGVzIE1lbGxpdHVzIFR5cGUgMiIgY29kZVN5c3RlbU5hbWU9IlNOT01FRC1DVCIvPg0KCSAgPC9vYnNlcnZhdGlvbj4NCgk8L2VudHJ5UmVsYXRpb25zaGlwPg0KICAgICAgPC9hY3Q+DQogICAgPC9lbnRyeT4NCg0KICAgIDwhLS0gQFByb2JsZW1MaXN0IFNlcHNpcyAtLT4gDQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMyIgZXh0ZW5zaW9uPSIyMDE1LTA4LTAxIiAvPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMyIgLz4NCgk8aWQgcm9vdD0iZWM4YTZmZjgtZWQ0Yi00ZjdlLTgyYzMtZTk4ZTU4YjQ1ZGY5IiAvPg0KCTxjb2RlIGNvZGU9IkNPTkMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuNiIgZGlzcGxheU5hbWU9IkNvbmNlcm4iIC8+DQoJPHN0YXR1c0NvZGUgY29kZT0iYWN0aXZlIi8+DQoJPGVmZmVjdGl2ZVRpbWU+DQoJICA8bG93IHZhbHVlPSIyMDE3MDEwMSIvPg0KCTwvZWZmZWN0aXZlVGltZT4NCgk8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiPg0KCSAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC40IiBleHRlbnNpb249IjIwMTUtMDgtMDEiLz4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC40Ii8+DQoJICAgIDxpZCByb290PSJhYjE3OTFiMC01YzcxLTExZGItYjBkZS0wODAwMjAwYzlhNzkiLz4NCgkgICAgPGNvZGUgY29kZT0iMjkzMDgiIGRpc3BsYXlOYW1lPSJEaWFnbm9zaXMiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiPg0KCSAgICAgIDx0cmFuc2xhdGlvbiBjb2RlPSIyOTMwOC00IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkRpYWdub3NpcyIvPg0KCSAgICA8L2NvZGU+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8ZWZmZWN0aXZlVGltZT4NCgkgICAgICA8bG93IHZhbHVlPSIyMDE3MDEwMSIvPg0KCSAgICA8L2VmZmVjdGl2ZVRpbWU+DQoJICAgIDx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGNvZGU9IjkxMzAyMDA4IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iU2Vwc2lzIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVELUNUIi8+DQoJICA8L29ic2VydmF0aW9uPg0KCTwvZW50cnlSZWxhdGlvbnNoaXA+DQogICAgICA8L2FjdD4NCiAgICA8L2VudHJ5Pg0KICAgIA0KICA8L3NlY3Rpb24+ICANCjwvY29tcG9uZW50Pg0KDQoNCjwhLS0NCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCkBASElTVE9SWSBPRiBQUk9DRURVUkVTDQoNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotLT4NCg0KPGNvbXBvbmVudD4NCiAgDQogIDxzZWN0aW9uPg0KICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjIuNy4xIi8+DQogICAgPCEtLSBQcm9jZWR1cmVzIHNlY3Rpb24gdGVtcGxhdGUgLS0+DQogICAgPGNvZGUgY29kZT0iNDc1MTktNCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiDQogICAgICAgICAgZGlzcGxheU5hbWU9IkhJU1RPUlkgT0YgUFJPQ0VEVVJFUyIvPg0KICAgIDx0aXRsZT5IaXN0b3J5IG9mIFByb2NlZHVyZXM8L3RpdGxlPg0KICAgIA0KICAgIDx0ZXh0Pg0KICAgICAgPGxpc3QgbGlzdFR5cGU9Im9yZGVyZWQiPg0KICAgICAgICA8aXRlbT48Y29udGVudCBJRD0icHJvY2VkdXJlMSI+Q2hlc3QgWC1yYXkgKDIwMTcvMDEvMDEpPC9jb250ZW50PjwvaXRlbT4JCSAgIA0KICAgICAgICA8aXRlbT48Y29udGVudCBJRD0icHJvY2VkdXJlMiI+RWxlY3Ryb2NhcmRpb2dyYXBoaWMgbW9uaXRvcmluZyAoRUtHKSAoMjAxNy8wMS8wMSk8L2NvbnRlbnQ+PC9pdGVtPg0KICAgICAgPC9saXN0Pg0KICAgIDwvdGV4dD4NCg0KICAgIA0KICAgIDwhLS0gQFByb2NlZHVyZSBDaGVzdCBYLVJheSAtLT4NCiAgICA8ZW50cnkgdHlwZUNvZGU9IkRSSVYiPg0KICAgICAgPHByb2NlZHVyZSBjbGFzc0NvZGU9IlBST0MiIG1vb2RDb2RlPSJFVk4iPg0KICAgICAgICA8dGVtcGxhdGVJZA0KICAgICAgICAgICAgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4xNCIvPg0KICAgICAgICA8aWQgZXh0ZW5zaW9uPSIxMjM0NTY3ODkiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjE5Ii8+DQoJDQogICAgICAgIDxjb2RlDQogICAgICAgICAgICBjb2RlPSIxNjg3MzEwMDkiDQogICAgICAgICAgICBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ig0KICAgICAgICAgICAgZGlzcGxheU5hbWU9IkNoZXN0IFgtUmF5Ig0KICAgICAgICAgICAgY29kZVN5c3RlbU5hbWU9IlNOT01FRC1DVCI+DQoJICANCiAgICAgICAgICA8b3JpZ2luYWxUZXh0Pg0KICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iI3Byb2NlZHVyZTEiLz4NCiAgICAgICAgICA8L29yaWdpbmFsVGV4dD4NCiAgICAgICAgPC9jb2RlPg0KICAgICAgICA8c3RhdHVzQ29kZQ0KICAgICAgICAgICAgY29kZT0iY29tcGxldGVkIi8+DQogICAgICAgIDxlZmZlY3RpdmVUaW1lDQogICAgICAgICAgICB2YWx1ZT0iMjAxMjA4MDYiLz4NCiAgICAgICAgPHByaW9yaXR5Q29kZQ0KICAgICAgICAgICAgY29kZT0iQ1IiDQogICAgICAgICAgICBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjciDQogICAgICAgICAgICBjb2RlU3lzdGVtTmFtZT0iQWN0UHJpb3JpdHkiDQogICAgICAgICAgICBkaXNwbGF5TmFtZT0iQ2FsbGJhY2sgcmVzdWx0cyIvPg0KICAgICAgICA8bWV0aG9kQ29kZQ0KICAgICAgICAgICAgbnVsbEZsYXZvcj0iVU5LIi8+DQogICAgICAgIDx0YXJnZXRTaXRlQ29kZQ0KICAgICAgICAgICAgY29kZT0iNTg2NzUwMDEiDQogICAgICAgICAgICBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ig0KICAgICAgICAgICAgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCINCiAgICAgICAgICAgIGRpc3BsYXlOYW1lPSJVcHBlciBSZXNwaXJhdG9yeSBUcmFjdCBTdHJ1Y3R1cmUiLz4NCiAgICAgICAgPHBlcmZvcm1lcj4NCiAgICAgICAgICA8YXNzaWduZWRFbnRpdHk+DQogICAgICAgICAgICA8aWQNCiAgICAgICAgICAgICAgICByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xOS41Ig0KICAgICAgICAgICAgICAgIGV4dGVuc2lvbj0iMTIzNCIvPg0KICAgICAgICAgICAgPGFkZHI+DQogICAgICAgICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT4xMDAyIEhlYWx0aGNhcmUgRHI8L3N0cmVldEFkZHJlc3NMaW5lPg0KICAgICAgICAgICAgICA8Y2l0eT5Qb3J0bGFuZDwvY2l0eT4NCiAgICAgICAgICAgICAgPHN0YXRlPk9SPC9zdGF0ZT4NCiAgICAgICAgICAgICAgPHBvc3RhbENvZGU+OTcyNjY8L3Bvc3RhbENvZGU+DQogICAgICAgICAgICAgIDxjb3VudHJ5PlVTPC9jb3VudHJ5Pg0KICAgICAgICAgICAgPC9hZGRyPg0KICAgICAgICAgICAgPHRlbGVjb20NCiAgICAgICAgICAgICAgICB1c2U9IldQIg0KICAgICAgICAgICAgICAgIHZhbHVlPSIoNTU1KTU1NS01NTUtMTIzNCIvPg0KICAgICAgICAgICAgPHJlcHJlc2VudGVkT3JnYW5pemF0aW9uPg0KICAgICAgICAgICAgICA8aWQNCiAgICAgICAgICAgICAgICAgIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjE5LjUiLz4NCiAgICAgICAgICAgICAgPG5hbWU+R2V0IFdlbGwgUmFkaW9sb2d5PC9uYW1lPg0KICAgICAgICAgICAgICA8dGVsZWNvbQ0KICAgICAgICAgICAgICAgICAgbnVsbEZsYXZvcj0iVU5LIi8+DQogICAgICAgICAgICAgIDxhZGRyDQogICAgICAgICAgICAgICAgICBudWxsRmxhdm9yPSJVTksiLz4NCiAgICAgICAgICAgIDwvcmVwcmVzZW50ZWRPcmdhbml6YXRpb24+DQogICAgICAgICAgPC9hc3NpZ25lZEVudGl0eT4NCiAgICAgICAgPC9wZXJmb3JtZXI+DQogICAgICAgIDxwYXJ0aWNpcGFudA0KICAgICAgICAgICAgdHlwZUNvZGU9IkxPQyI+DQogICAgICAgICAgPHBhcnRpY2lwYW50Um9sZQ0KICAgICAgICAgICAgICBjbGFzc0NvZGU9IlNETE9DIj4NCiAgICAgICAgICAgIDx0ZW1wbGF0ZUlkDQogICAgICAgICAgICAgICAgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4zMiIvPg0KICAgICAgICAgICAgPCEtLSBTZXJ2aWNlIERlbGl2ZXJ5IExvY2F0aW9uIHRlbXBsYXRlIC0tPg0KICAgICAgICAgICAgPGNvZGUNCiAgICAgICAgICAgICAgICBjb2RlPSIxMTYwLTEiDQogICAgICAgICAgICAgICAgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4yNTkiDQogICAgICAgICAgICAgICAgY29kZVN5c3RlbU5hbWU9IkhlYWx0aGNhcmVTZXJ2aWNlTG9jYXRpb24iDQogICAgICAgICAgICAgICAgZGlzcGxheU5hbWU9IlVyZ2VudCBDYXJlIENlbnRlciIvPg0KICAgICAgICAgICAgPGFkZHI+DQogICAgICAgICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT4xMDAyIEhlYWx0aGNhcmUgRHI8L3N0cmVldEFkZHJlc3NMaW5lPg0KICAgICAgICAgICAgICA8Y2l0eT5Qb3J0bGFuZDwvY2l0eT4NCiAgICAgICAgICAgICAgPHN0YXRlPk9SPC9zdGF0ZT4NCiAgICAgICAgICAgICAgPHBvc3RhbENvZGU+OTcyNjY8L3Bvc3RhbENvZGU+DQogICAgICAgICAgICAgIDxjb3VudHJ5PlVTPC9jb3VudHJ5Pg0KICAgICAgICAgICAgPC9hZGRyPg0KICAgICAgICAgICAgPHRlbGVjb20NCiAgICAgICAgICAgICAgICBudWxsRmxhdm9yPSJVTksiLz4NCiAgICAgICAgICAgIDxwbGF5aW5nRW50aXR5DQogICAgICAgICAgICAgICAgY2xhc3NDb2RlPSJQTEMiPg0KICAgICAgICAgICAgICA8bmFtZT5HZXQgV2VsbCBDbGluaWM8L25hbWU+DQogICAgICAgICAgICA8L3BsYXlpbmdFbnRpdHk+DQogICAgICAgICAgPC9wYXJ0aWNpcGFudFJvbGU+DQogICAgICAgIDwvcGFydGljaXBhbnQ+DQogICAgICA8L3Byb2NlZHVyZT4NCiAgICA8L2VudHJ5Pg0KDQogICAgPCEtLSBAUHJvY2VkdXJlIEVsZWN0cm9jYXJkaW9ncmFwaGljIG1vbml0b3JpbmcgLS0+DQogICAgPGVudHJ5Pg0KICAgICAgPHByb2NlZHVyZSBjbGFzc0NvZGU9IlBST0MiIG1vb2RDb2RlPSJFVk4iPg0KICAgICAgICA8IS0tIFByb2NlZHVyZSAgQWN0aXZpdHkgUHJvY2VkdXJlIFRlbXBsYXRlIC0tPg0KICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjE0Ii8+DQogICAgICAgIDxpZCByb290PSJmZjIzYzIyNS1lMDExLTQ4NmEtYTgwNy1jMmE2ZTU3MmVjZjciLz4NCiAgICAgICAgPGNvZGUgeHNpOnR5cGU9IkNFIiBjb2RlPSI0OTAzODAxMCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiINCiAgICAgICAgICAgICAgZGlzcGxheU5hbWU9IkVLRyINCiAgICAgICAgICAgICAgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCI+DQogICAgICAgICAgPG9yaWdpbmFsVGV4dD4NCiAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiNwcm9jZWR1cmUxIi8+DQogICAgICAgICAgPC9vcmlnaW5hbFRleHQ+DQogICAgICAgIDwvY29kZT4NCiAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+DQogICAgICAgIDxlZmZlY3RpdmVUaW1lIHhzaTp0eXBlPSJJVkxfVFMiPg0KICAgICAgICAgIDxsb3cgdmFsdWU9IjIwMTIxMDE1MTQzMCIvPg0KICAgICAgICAgIDxoaWdoIHZhbHVlPSIyMDEyMTAxNTE0NTUiLz4NCiAgICAgICAgPC9lZmZlY3RpdmVUaW1lPg0KICAgICAgICA8cGVyZm9ybWVyIHR5cGVDb2RlPSJQUkYiPg0KICAgICAgICAgIDxhc3NpZ25lZEVudGl0eT4NCiAgICAgICAgICAgIDwhLS0gTlBJIDM0NTY3IC0tPg0KICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iMzQ1NjciIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjQuNiIvPg0KICAgICAgICAgICAgPGNvZGUgY29kZT0iMjA3UkMwMDAwWCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xMDEiIGNvZGVTeXN0ZW1OYW1lPSJOVUNDIg0KICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU9IkNhcmRpb3Zhc2N1bGFyIERpc2Vhc2UiLz4NCiAgICAgICAgICAgIDxhZGRyPg0KICAgICAgICAgICAgICA8c3RyZWV0QWRkcmVzc0xpbmU+MjA5IENvdW50eSBMaW5lIFJkPC9zdHJlZXRBZGRyZXNzTGluZT4NCiAgICAgICAgICAgICAgPGNpdHk+U3ByaW5nZmllbGQ8L2NpdHk+DQogICAgICAgICAgICAgIDxzdGF0ZT5WQTwvc3RhdGU+DQogICAgICAgICAgICAgIDxwb3N0YWxDb2RlPjIyMTUwPC9wb3N0YWxDb2RlPg0KICAgICAgICAgICAgPC9hZGRyPg0KICAgICAgICAgICAgPHRlbGVjb20gdXNlPSJXUCIgdmFsdWU9InRlbDorMSg1NzEpNTU1LTAxNTUiLz4NCiAgICAgICAgICAgIDxhc3NpZ25lZFBlcnNvbj4NCiAgICAgICAgICAgICAgPG5hbWU+DQogICAgICAgICAgICAgICAgPGdpdmVuPkR3YXluZTwvZ2l2ZW4+DQogICAgICAgICAgICAgICAgPGZhbWlseT5Gb3JnZTwvZmFtaWx5Pg0KICAgICAgICAgICAgICAgIDxzdWZmaXg+TUQ8L3N1ZmZpeD4NCiAgICAgICAgICAgICAgPC9uYW1lPg0KICAgICAgICAgICAgPC9hc3NpZ25lZFBlcnNvbj4NCiAgICAgICAgICAgIDxyZXByZXNlbnRlZE9yZ2FuaXphdGlvbj4NCiAgICAgICAgICAgICAgPGlkIHJvb3Q9IjEuMS4xLjEuMS4xLjEuMS4zIi8+DQogICAgICAgICAgICAgIDxuYW1lPg0KICAgICAgICAgICAgICAgIE9wZW4gSGVhcnQgQXNzb2NpYXRlcw0KICAgICAgICAgICAgICA8L25hbWU+DQogICAgICAgICAgICAgIDx0ZWxlY29tIHVzZT0iV1AiIHZhbHVlPSJ0ZWw6KzEoNTcxKTU1NS0wMTU1Ii8+DQogICAgICAgICAgICAgIDxhZGRyPg0KICAgICAgICAgICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT4yMDkgQ291bnR5IExpbmUgUmQ8L3N0cmVldEFkZHJlc3NMaW5lPg0KICAgICAgICAgICAgICAgIDxjaXR5PlNwcmluZ2ZpZWxkPC9jaXR5Pg0KICAgICAgICAgICAgICAgIDxzdGF0ZT5WQTwvc3RhdGU+DQogICAgICAgICAgICAgICAgPHBvc3RhbENvZGU+MjIxNTA8L3Bvc3RhbENvZGU+DQogICAgICAgICAgICAgIDwvYWRkcj4NCiAgICAgICAgICAgIDwvcmVwcmVzZW50ZWRPcmdhbml6YXRpb24+DQogICAgICAgICAgPC9hc3NpZ25lZEVudGl0eT4NCiAgICAgICAgPC9wZXJmb3JtZXI+DQogICAgICA8L3Byb2NlZHVyZT4NCiAgICA8L2VudHJ5Pg0KICAgIA0KICA8L3NlY3Rpb24+DQo8L2NvbXBvbmVudD4NCg0KDQo8IS0tICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpAQFJFVklFVyBPRiBTWVNURU1TDQoNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLS0+DQoNCjxjb21wb25lbnQ+DQogIDxzZWN0aW9uPg0KICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMy4xOCIvPg0KICAgIDxjb2RlIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBjb2RlPSIxMDE4Ny0zIiBkaXNwbGF5TmFtZT0iUkVWSUVXIE9GIFNZU1RFTVMiLz4NCiAgICA8dGl0bGU+UmV2aWV3IG9mIFN5c3RlbXM8L3RpdGxlPg0KICAgIDx0ZXh0Pg0KICAgICAgPHBhcmFncmFwaD4NCglMaW1pdGVkLCBzZWNvbmRhcnkgdG8gdGhlIHBhdGllbnTigJlzIGNvbmRpdGlvbi4NCiAgICAgIDwvcGFyYWdyYXBoPg0KICAgICAgPHBhcmFncmFwaD4NCglIRUVOVDogd2l0aG91dCBoZWFkYWNoZSwgdmlzdWFsIGRpc3R1cmJhbmNlLCBtaWxkIGhlYXJpbmcgbG9zcw0KICAgICAgPC9wYXJhZ3JhcGg+DQogICAgICA8cGFyYWdyYXBoPg0KCVJlc3BpcmF0b3J5OiBNaWxkIENPUEQgd2l0aCBsb25nIHNtb2tpbmcgaGlzdG9yeSwgSHggb2YgcG5ldW1vbmlhIHNldmVyYWwgeWVhcnMgYWdvDQogICAgICA8L3BhcmFncmFwaD4NCiAgICAgIDxwYXJhZ3JhcGg+DQoJQ2FyZGlhYzogbmVnYXRpdmUsIFJpc2sgZmFjdG9ycyBpbmNsdWRlIGFibm9ybWFsIGxpcGlkcywgc21va2luZw0KICAgICAgPC9wYXJhZ3JhcGg+DQogICAgICA8cGFyYWdyYXBoPg0KCUdJOiBuZWdhdGl2ZQ0KICAgICAgPC9wYXJhZ3JhcGg+DQogICAgICA8cGFyYWdyYXBoPg0KCUdlbml0b3VyaW5hcnk6IEh4IG9mIGJlbmlnbiBHSSBwb2x5cHMNCiAgICAgIDwvcGFyYWdyYXBoPg0KICAgIDwvdGV4dD4NCiAgPC9zZWN0aW9uPg0KPC9jb21wb25lbnQ+DQoNCg0KDQo8IS0tDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpAQFNPQ0lBTCBISVNUT1JZDQoNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotLT4NCg0KPGNvbXBvbmVudD4NCiAgPCEtLSAgIFNvY2lhbCBIaXN0b3J5ICoqKioqKioqIC0tPg0KICA8c2VjdGlvbj4NCiAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi4yLjE3Ii8+DQogICAgPCEtLSAgKioqKioqKiogIFNvY2lhbCBoaXN0b3J5IHNlY3Rpb24gdGVtcGxhdGUgICAqKioqKioqKiAtLT4NCiAgICA8Y29kZSBjb2RlPSIyOTc2Mi0yIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGRpc3BsYXlOYW1lPSJTb2NpYWwgSGlzdG9yeSIvPg0KICAgIDx0aXRsZT5Tb2NpYWwgSGlzdG9yeTwvdGl0bGU+DQogICAgDQogICAgPHRleHQ+DQogICAgICA8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0iMTAwJSI+DQoJPHRoZWFkPg0KCSAgPHRyPg0KCSAgICA8dGg+U29jaWFsIEhpc3RvcnkgRWxlbWVudDwvdGg+DQoJICAgIDx0aD5EZXNjcmlwdGlvbjwvdGg+DQoJICAgIDx0aD5FZmZlY3RpdmUgRGF0ZXM8L3RoPg0KCSAgPC90cj4NCgk8L3RoZWFkPg0KCTx0Ym9keT4NCgkgIDx0cj4NCgkgICAgPHRkPg0KCSAgICA8Y29udGVudCBJRD0ic29jMSIvPiBzbW9raW5nPC90ZD4NCgkgICAgPHRkPjEgcGFjayBwZXIgZGF5PC90ZD4NCgkgICAgPHRkPjIwMTYtMjAxNzwvdGQ+DQoJICA8L3RyPg0KCSAgPHRyPg0KCSAgICA8dGQ+DQoJICAgIDxjb250ZW50IElEPSJzb2MyIi8+IHNtb2tpbmc8L3RkPg0KCSAgICA8dGQ+MiBwYWNrIHBlciBkYXk8L3RkPg0KCSAgICA8dGQ+MTk5MC0yMDE3PC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0ZD4NCgkgICAgPGNvbnRlbnQgSUQ9InNvYzMiLz5BbGNvaG9sIGNvbnN1bXB0aW9uPC90ZD4NCgkgICAgPHRkPjUgZHJpbmtzIHBlciB3ZWVrPC90ZD4NCgkgICAgPHRkPjE5OTAgLSA8L3RkPg0KCSAgPC90cj4NCgk8L3Rib2R5Pg0KICAgICAgPC90YWJsZT4NCiAgICA8L3RleHQ+DQogICAgDQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4zOCIvPg0KCTwhLS0gICoqKioqKioqICBTb2NpYWwgaGlzdG9yeSBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAgICoqKioqKioqIC0tPg0KCTxpZCByb290PSI5YjU2YzI1ZC05MTA0LTQ1ZWUtOWZhNC1lMGYzYWZhYTAxYzEiLz4NCgk8Y29kZSBjb2RlPSIyMzAwNTYwMDQiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJDaWdhcmV0dGUgc21va2luZyI+DQoJICA8b3JpZ2luYWxUZXh0Pg0KCSAgICA8cmVmZXJlbmNlIHZhbHVlPSIjc29jMSIvPg0KCSAgPC9vcmlnaW5hbFRleHQ+DQoJPC9jb2RlPg0KCTxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCTxlZmZlY3RpdmVUaW1lPg0KCSAgPGxvdyB2YWx1ZT0iMTk0NyIvPg0KCSAgPGhpZ2ggdmFsdWU9IjE5NzIiLz4NCgk8L2VmZmVjdGl2ZVRpbWU+DQoJPHZhbHVlIHhzaTp0eXBlPSJTVCI+MSBwYWNrIHBlciBkYXk8L3ZhbHVlPg0KICAgICAgPC9vYnNlcnZhdGlvbj4NCiAgICA8L2VudHJ5Pg0KICAgIA0KICAgIDxlbnRyeSB0eXBlQ29kZT0iRFJJViI+DQogICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPg0KCTx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMzgiLz4NCgk8IS0tICAqKioqKioqKiAgU29jaWFsIGhpc3Rvcnkgb2JzZXJ2YXRpb24gdGVtcGxhdGUgICAqKioqKioqKiAtLT4NCgk8aWQgcm9vdD0iNDVlZmI2MDQtNzA0OS00YTJlLWFkMzMtZDM4NTU2Yzk2MzZjIi8+DQoJPGNvZGUgY29kZT0iMjMwMDU2MDA0IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2IiBkaXNwbGF5TmFtZT0iQ2lnYXJldHRlIHNtb2tpbmciPg0KCSAgPG9yaWdpbmFsVGV4dD4NCgkgICAgPHJlZmVyZW5jZSB2YWx1ZT0iI3NvYzIiLz4NCgkgIDwvb3JpZ2luYWxUZXh0Pg0KCTwvY29kZT4NCgk8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgk8ZWZmZWN0aXZlVGltZT4NCgkgIDxsb3cgdmFsdWU9IjE5NzMiLz4NCgk8L2VmZmVjdGl2ZVRpbWU+DQoJPHZhbHVlIHhzaTp0eXBlPSJTVCI+Tm9uZTwvdmFsdWU+DQogICAgICA8L29ic2VydmF0aW9uPg0KICAgIDwvZW50cnk+DQogICAgDQogICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4NCiAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4zOCIvPg0KCTwhLS0gICoqKioqKioqICBTb2NpYWwgaGlzdG9yeSBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAgICoqKioqKioqIC0tPg0KCTxpZCByb290PSIzN2Y3NmM1MS02NDExLTRlMWQtOGEzNy05NTdmZDQ5ZDJjZWYiLz4NCgk8Y29kZSBjb2RlPSIxNjA1NzMwMDMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJBbGNvaG9sIGNvbnN1bXB0aW9uIj4NCgkgIDxvcmlnaW5hbFRleHQ+DQoJICAgIDxyZWZlcmVuY2UgdmFsdWU9IiNzb2MzIi8+DQoJICA8L29yaWdpbmFsVGV4dD4NCgk8L2NvZGU+DQoJPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+DQoJPGVmZmVjdGl2ZVRpbWU+DQoJICA8bG93IHZhbHVlPSIxOTczIi8+DQoJPC9lZmZlY3RpdmVUaW1lPg0KCTx2YWx1ZSB4c2k6dHlwZT0iU1QiPk5vbmU8L3ZhbHVlPg0KICAgICAgPC9vYnNlcnZhdGlvbj4NCiAgICA8L2VudHJ5Pg0KICAgIA0KICA8L3NlY3Rpb24+DQo8L2NvbXBvbmVudD4NCg0KDQo8IS0tDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpAVklUQUwgU0lHTlMNCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0tPg0KPGNvbXBvbmVudD4NCg0KICA8c2VjdGlvbj4NCiAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi4yLjQuMSIgZXh0ZW5zaW9uPSIyMDE1LTA4LTAxIi8+DQogICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuMi40LjEiLz4NCiAgICA8Y29kZSBjb2RlPSI4NzE2LTMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iVklUQUwgU0lHTlMiLz4NCiAgICA8dGl0bGU+Vml0YWwgU2lnbnM8L3RpdGxlPg0KICAgIDx0ZXh0Pg0KICAgICAgDQogICAgICA8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0iMTAwJSI+DQoJPHRoZWFkPg0KCSAgPHRyPg0KCSAgICA8dGggYWxpZ249IkxlZnQiPk1lYXN1cmVtZW50PC90aD4NCgkgICAgPHRoPlZhbHVlPC90aD4NCgkgIDwvdHI+DQoJPC90aGVhZD4NCgk8dGJvZHk+DQoJICA8dHI+DQoJICAgIDx0aCBhbGlnbj0ibGVmdCI+SGVpZ2h0PC90aD4NCgkgICAgPHRkIElEPSJ2aXQxIj43MyBpbjwvdGQ+DQoJICA8L3RyPg0KCSAgPHRyPg0KCSAgICA8dGggYWxpZ249ImxlZnQiPldlaWdodDwvdGg+DQoJICAgIDx0ZCBJRD0idml0MiI+MTkwIGxiczwvdGQ+DQoJICA8L3RyPg0KCSAgPHRyPg0KCSAgICA8dGggYWxpZ249ImxlZnQiPkJsb29kIFByZXNzdXJlPC90aD4NCgkgICAgPHRkIElEPSJ2aXQzIj4xNTYvMTAwPC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0aCBhbGlnbj0ibGVmdCI+SGVhcnQgUmF0ZTwvdGg+DQoJICAgIDx0ZCBJRD0idml0NCI+MTI4IGJlYXRzIHBlciBtaW51dGU8L3RkPg0KCSAgPC90cj4NCgkgIDx0cj4NCgkgICAgPHRoIGFsaWduPSJsZWZ0Ij5PeHlnZW4gUGVyY2VudGFnZSBCbGRDIE94aW1ldHJ5PC90aD4NCgkgICAgPHRkIElEPSJ2aXQ1Ij45NCBwZXJjZW50PC90ZD4NCgkgIDwvdHI+DQoJICA8dHI+DQoJICAgIDx0aCBhbGlnbj0ibGVmdCI+Qm9keSBUZW1wZXJhdHVyZTwvdGg+DQoJICAgIDx0ZCBJRD0idml0NiI+MTAxLjUgZmFocmVuaGVpdDwvdGQ+DQoJICA8L3RyPg0KCSAgPHRyPg0KCSAgICA8dGggYWxpZ249ImxlZnQiPlJlc3BpcmF0b3J5IFJhdGU8L3RoPg0KCSAgICA8dGQgSUQ9InZpdDciPjE4IGJyZWF0aHMgcGVyIG1pbnV0ZTwvdGQ+DQoJICA8L3RyPg0KCTwvdGJvZHk+DQogICAgICA8L3RhYmxlPg0KICAgICAgDQogICAgPC90ZXh0Pg0KICAgIDxlbnRyeSB0eXBlQ29kZT0iRFJJViI+DQogICAgICA8b3JnYW5pemVyIGNsYXNzQ29kZT0iQ0xVU1RFUiIgbW9vZENvZGU9IkVWTiI+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yNiIgZXh0ZW5zaW9uPSIyMDE1LTA4LTAxIi8+DQoJPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yNiIvPg0KCTxpZCByb290PSIzMWI3M2JkMC1jZmZjLTQ1OTktOTAyZS1kYmU1NGJjNTZjYjQiLz4NCgk8Y29kZSBjb2RlPSI0NjY4MDAwNSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIgY29kZVN5c3RlbU5hbWU9IlNOT01FRC1DVCIgZGlzcGxheU5hbWU9IlZpdGFsIHNpZ25zIj4NCgkgIDx0cmFuc2xhdGlvbiBjb2RlPSI3NDcyOC03IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IlZpdGFsIHNpZ25zIi8+DQoJPC9jb2RlPg0KCTxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCTxlZmZlY3RpdmVUaW1lPg0KCSAgPGxvdyB2YWx1ZT0iMjAxNzAxMDEiLz4NCgkgIDxoaWdoIHZhbHVlPSIyMDE3MDEwMSIvPg0KCTwvZWZmZWN0aXZlVGltZT4NCgkNCgk8IS0tIEBWaXRhbHMgSGVpZ2h0IC0tPiANCgk8Y29tcG9uZW50Pg0KCSAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yNyIgZXh0ZW5zaW9uPSIyMDE0LTA2LTA5Ii8+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMjciLz4NCgkgICAgPGlkIHJvb3Q9ImVkOTU4OWZkLWZkYTAtNDFmNy1hM2QwLWRjNTM3NTU0ZjVjMiIvPg0KCSAgICA8Y29kZSBjb2RlPSI4MzAyLTIiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iSGVpZ2h0Ii8+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8ZWZmZWN0aXZlVGltZSB2YWx1ZT0iMjAxNzAxMDExMDA1LTA1MDAiLz4NCgkgICAgPHZhbHVlIHhzaTp0eXBlPSJQUSIgdmFsdWU9IjE4NSIgdW5pdD0iY20iLz4NCgkgICAgPGludGVycHJldGF0aW9uQ29kZSBjb2RlPSJOIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjgzIi8+DQoJICA8L29ic2VydmF0aW9uPg0KCTwvY29tcG9uZW50Pg0KCQ0KCTwhLS0gQFZpdGFscyBXZWlnaHQgLS0+IA0KCTxjb21wb25lbnQ+DQoJICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjI3IiBleHRlbnNpb249IjIwMTQtMDYtMDkiLz4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yNyIvPg0KCSAgICA8aWQgcm9vdD0iZjRlNzI5ZTItYTk3Zi00YTdlLThlMjMtYzkyZjliNmI1NWNmIi8+DQoJICAgIDxjb2RlIGNvZGU9IjI5NDYzLTciIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iV2VpZ2h0Ii8+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8ZWZmZWN0aXZlVGltZSB2YWx1ZT0iMjAxNzAxMDExMDA1LTA1MDAiLz4NCgkgICAgPHZhbHVlIHhzaTp0eXBlPSJQUSIgdmFsdWU9Ijg2IiB1bml0PSJrZyIvPg0KCSAgICA8aW50ZXJwcmV0YXRpb25Db2RlIGNvZGU9Ik4iIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuODMiLz4NCgkgIDwvb2JzZXJ2YXRpb24+DQoJPC9jb21wb25lbnQ+DQoJDQoJPCEtLSBAVml0YWxzIEJQIERpYXN0b2xpYyAtLT4gDQoJPGNvbXBvbmVudD4NCgkgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMjciIGV4dGVuc2lvbj0iMjAxNC0wNi0wOSIvPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjI3Ii8+DQoJICAgIDxpZCByb290PSIxYzI3NDhiNy1lNDQwLTQxYmEtYmMwMS1kZGU5N2Q4NGEwMzYiLz4NCgkgICAgPGNvZGUgY29kZT0iODQ2Mi00IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkJsb29kIFByZXNzdXJlLURpYXN0b2xpYyIvPg0KCSAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgkgICAgPGVmZmVjdGl2ZVRpbWUgdmFsdWU9IjIwMTcwMTAxMTAwOC0wNTAwIi8+DQoJICAgIDx2YWx1ZSB4c2k6dHlwZT0iUFEiIHZhbHVlPSIxMDAiIHVuaXQ9Im1tW0hnXSIvPg0KCSAgICA8aW50ZXJwcmV0YXRpb25Db2RlIGNvZGU9Ik4iIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuODMiLz4NCgkgIDwvb2JzZXJ2YXRpb24+DQoJPC9jb21wb25lbnQ+DQoNCgk8IS0tIEBWaXRhbHMgQlAgU3lzdG9saWMgLS0+IA0KCTxjb21wb25lbnQ+DQoJICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjI3IiBleHRlbnNpb249IjIwMTQtMDYtMDkiLz4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yNyIvPg0KCSAgICA8aWQgcm9vdD0iYTBlMzljNzAtOTY3NC00YjJhLTk4MzctY2RmNzQyMDBkOGQ1Ii8+DQoJICAgIDxjb2RlIGNvZGU9Ijg0ODAtNiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJCbG9vZCBQcmVzc3VyZS1TeXN0b2xpYyIvPg0KCSAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4NCgkgICAgPGVmZmVjdGl2ZVRpbWUgdmFsdWU9IjIwMTcwMTAxMTAwOC0wNTAwIi8+DQoJICAgIDx2YWx1ZSB4c2k6dHlwZT0iUFEiIHZhbHVlPSIxNTYiIHVuaXQ9Im1tW0hnXSIvPg0KCSAgICA8aW50ZXJwcmV0YXRpb25Db2RlIGNvZGU9Ik4iIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuODMiLz4NCgkgIDwvb2JzZXJ2YXRpb24+DQoJPC9jb21wb25lbnQ+DQoNCgk8IS0tIEBWaXRhbHMgSGVhcnQgUmF0ZSAtLT4gDQoJPGNvbXBvbmVudD4NCgkgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMjciIGV4dGVuc2lvbj0iMjAxNC0wNi0wOSIvPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjI3Ii8+DQoJICAgIDxpZCByb290PSJhMGUzOWM3MC05Njc1LTRiMmEtOTgzOC1jZGY3NDIwMGQ4ZDUiLz4NCgkgICAgPGNvZGUgY29kZT0iODg2Ny00IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkhlYXJ0IFJhdGUiLz4NCgkgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+DQoJICAgIDxlZmZlY3RpdmVUaW1lIHZhbHVlPSIyMDE3MDEwMTEwMTAtMDUwMCIvPg0KCSAgICA8dmFsdWUgeHNpOnR5cGU9IlBRIiB2YWx1ZT0iODQiIHVuaXQ9Ii9taW4iLz4NCgkgICAgPGludGVycHJldGF0aW9uQ29kZSBjb2RlPSJOIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjgzIi8+DQoJICA8L29ic2VydmF0aW9uPg0KCTwvY29tcG9uZW50Pg0KDQoJPCEtLSBAVml0YWxzIE94aW1ldHJ5IEBUT0RPIC0tPiAJCQkJCQkJDQoJPGNvbXBvbmVudD4NCgkgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+DQoJICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjIyLjQuMjciIGV4dGVuc2lvbj0iMjAxNC0wNi0wOSIvPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjI3Ii8+DQoJICAgIDxpZCByb290PSJhMGUzOWM3MC05Njc1LTRiMmEtOTgzOS1jZGY3NDIwMGQ4ZDUiLz4NCgkgICAgPGNvZGUgY29kZT0iNTk0MDgtNSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJPMiAlIEJsZEMgT3hpbWV0cnkiLz4NCgkgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+DQoJICAgIDxlZmZlY3RpdmVUaW1lIHZhbHVlPSIyMDE3MDEwMTEwMTItMDUwMCIvPg0KCSAgICA8dmFsdWUgeHNpOnR5cGU9IlBRIiB2YWx1ZT0iOTUiIHVuaXQ9IiUiLz4NCgkgICAgPGludGVycHJldGF0aW9uQ29kZSBjb2RlPSJOIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjgzIi8+DQoJICA8L29ic2VydmF0aW9uPg0KCTwvY29tcG9uZW50Pg0KDQoJPCEtLSBAVml0YWxzIEJvZHkgVGVtcGVyYXR1cmUgLS0+IA0KCTxjb21wb25lbnQ+DQoJICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjI3IiBleHRlbnNpb249IjIwMTQtMDYtMDkiLz4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yNyIvPg0KCSAgICA8aWQgcm9vdD0iYTBlMzljNzAtOTY3NS00YjJhLTk4NDEtY2RmNzQyMDBkOGQ1Ii8+DQoJICAgIDxjb2RlIGNvZGU9IjgzMTAtNSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJCb2R5IFRlbXBlcmF0dXJlIi8+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8ZWZmZWN0aXZlVGltZSB2YWx1ZT0iMjAxNzAxMDExMDE1LTA1MDAiLz4NCgkgICAgPHZhbHVlIHhzaTp0eXBlPSJQUSIgdmFsdWU9IjQwIiB1bml0PSJDZWwiLz4NCgkgICAgPGludGVycHJldGF0aW9uQ29kZSBjb2RlPSJOIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjgzIi8+DQoJICA8L29ic2VydmF0aW9uPg0KCTwvY29tcG9uZW50Pg0KDQoJPCEtLSBAVml0YWxzIFJlc3BpcmF0b3J5IFJhdGUgLS0+IA0KCTxjb21wb25lbnQ+DQoJICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPg0KCSAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4yMi40LjI3IiBleHRlbnNpb249IjIwMTQtMDYtMDkiLz4NCgkgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMjIuNC4yNyIvPg0KCSAgICA8aWQgcm9vdD0iYTBlMzljNzAtOTY3NS00YjJhLTk4NDItY2RmNzQyMDBkOGQ1Ii8+DQoJICAgIDxjb2RlIGNvZGU9IjkyNzktMSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJSZXNwaXJhdG9yeSBSYXRlIi8+DQoJICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPg0KCSAgICA8ZWZmZWN0aXZlVGltZSB2YWx1ZT0iMjAxNzAxMDExMDE1LTA1MDAiLz4NCgkgICAgPHZhbHVlIHhzaTp0eXBlPSJQUSIgdmFsdWU9IjE4IiB1bml0PSIvbWluIi8+DQoJICAgIDxpbnRlcnByZXRhdGlvbkNvZGUgY29kZT0iTiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNS44MyIvPg0KCSAgPC9vYnNlcnZhdGlvbj4NCgk8L2NvbXBvbmVudD4JCQkJCQkJCQkNCiAgICAgIDwvb3JnYW5pemVyPg0KICAgIDwvZW50cnk+CQkJCQkNCiAgPC9zZWN0aW9uPg0KICANCiAgDQo8L2NvbXBvbmVudD4NCgkJCQkgICAgDQoJCQkNCgkJCQ0KDQo8IS0tDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAgICANCkhMNyBDREEgRGlzY2hhcmdlIFN1bW1hcnkNCmh0dHA6Ly9yLmRldGFpbHMubG9pbmMub3JnL0xPSU5DLzE4ODQyLTUuaHRtbA0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNClJlcXVpcmVkDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiBBbGxlcmdpZXMNCg0KKiBIb3NwaXRhbCBDb3Vyc2UNCg0KKiBIb3NwaXRhbCBEaXNjaGFyZ2UgRGlhZ25vc2lzDQoNCiogSG9zcGl0YWwgRGlzY2hhcmdlIE1lZGljYXRpb25zDQoNCiogUGxhbiBvZiBDYXJlDQoNCg0KDQpPcHRpb25hbA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCiogQ2hpZWYgQ29tcGxhaW50DQoNCiogQ2hpZWYgQ29tcGxhaW50L1JlYXNvbiBmb3IgVmlzaXQNCg0KKiBEaXNjaGFyZ2UgRGlldA0KDQoqIEZhbWlseSBIaXN0b3J5DQoNCiogRnVuY3Rpb25hbCBTdGF0dXMNCg0KKiBIaXN0b3J5IG9mIFBhc3QgSWxsbmVzcyAoUGFzdCBNZWRpY2FsIEhpc3RvcnkpDQoNCiogSGlzdG9yeSBvZiBQcmVzZW50IElsbG5lc3MNCg0KKiBIb3NwaXRhbCBEaXNjaGFyZ2UgUGh5c2ljYWwNCg0KKiBIb3NwaXRhbCBEaXNjaGFyZ2UgU3R1ZGllcyBTdW1tYXJ5DQoNCiogSW1tdW5pemF0aW9ucw0KDQoqIFByb2JsZW0gTGlzdA0KDQoqIFByb2NlZHVyZXMgKExpc3Qgb2YgU3VyZ2VyaWVzIC0gSGlzdG9yeSBvZiBQcm9jZWR1cmVzKQ0KDQoqIFJlYXNvbiBmb3IgVmlzaXQNCg0KKiBSZXZpZXcgb2YgU3lzdGVtcw0KDQoqIFNvY2lhbCBIaXN0b3J5DQoNCiogVml0YWwgU2lnbnMNCg0KLS0+DQoNCgkJPC9zdHJ1Y3R1cmVkQm9keT4NCgk8L2NvbXBvbmVudD4NCjwvQ2xpbmljYWxEb2N1bWVudD4="
            }
        }
    ]
}